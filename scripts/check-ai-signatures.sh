#!/usr/bin/env bash
# Check for forbidden AI attribution signatures

set -euo pipefail

# Colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

ISSUES_FOUND=0

log_check() {
    echo -e "${BLUE}üîç $1${NC}"
}

log_issue() {
    echo -e "${RED}‚ùå $1${NC}"
    ISSUES_FOUND=$((ISSUES_FOUND + 1))
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

echo "üö´ Checking for forbidden AI attribution signatures..."
echo

# AI signature patterns (focus on text, not emojis which may change)
AI_PATTERNS=(
    "Generated with.*Claude Code"
    "Generated with.*claude\.ai"
    "Co-Authored-By.*Claude"
    "Generated by Claude"
    "Created with Claude Code"
    "Claude AI assistance"
    "AI-generated code"
    "claude\.ai/code"
    "anthropic\.com"
    "noreply@anthropic\.com"
)

for pattern in "${AI_PATTERNS[@]}"; do
    log_check "Checking for: $pattern"

    if command -v rg >/dev/null 2>&1; then
        results=$(rg --line-number --no-heading --type-not binary "$pattern" . 2>/dev/null || true)
    else
        results=$(find . -type f \( -name "*.py" -o -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" -o -name "*.md" -o -name "*.txt" -o -name "*.yml" -o -name "*.yaml" \) \
            -not -path "*/.venv/*" -not -path "*/venv/*" -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/build/*" -not -path "*/dist/*" \
            -exec grep -E -Hn "$pattern" {} \; 2>/dev/null || true)
    fi

    if [ -n "$results" ]; then
        log_issue "Found forbidden AI signatures:"
        echo "$results" | head -20
        echo
    else
        log_success "No forbidden signatures found"
    fi
    echo
done

echo
if [ $ISSUES_FOUND -eq 0 ]; then
    echo -e "${GREEN}üéâ No forbidden AI signatures found!${NC}"
    exit 0
else
    echo -e "${RED}‚ö†Ô∏è  Found $ISSUES_FOUND categories of AI signature violations${NC}"
    echo -e "${YELLOW}üí° Remove all AI attribution signatures from code and documentation${NC}"
    exit 1
fi
