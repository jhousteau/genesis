# Universal Project Platform - Project Registry
# Version: 1.0.0
# This file serves as the single source of truth for all managed projects

global:
  organization: "whitehorse"
  default_region: "us-central1"
  plumbing_version: "2.0.0"
  bootstrap_version: "1.0.0"
  
  # Default policies
  policies:
    require_approval_for_prod: true
    auto_backup_enabled: true
    security_scanning_enabled: true
    cost_monitoring_enabled: true
    
  # Default environments for all projects
  default_environments:
    - dev
    - test
    - staging
    - prod
    
  # Global resource limits
  resource_limits:
    max_instances_per_env: 10
    max_storage_gb_per_env: 1000
    max_monthly_cost_usd: 1000

# Projects registry
projects:
  # Bootstrap platform project
  bootstrapper:
    path: "/Users/jameshousteau/source_code/bootstrapper"
    type: "infrastructure"
    language: "bash"
    framework: "terraform"
    team: "platform"
    criticality: "high"
    description: "Universal Project Platform - manages all other projects"
    repository: "https://github.com/whitehorse/bootstrapper"
    
    environments:
      dev:
        gcp_project: "whitehorse-bootstrap-dev"
        gcloud_home: "~/.gcloud/bootstrapper-dev"
        deploy_sa: "deploy@whitehorse-bootstrap-dev.iam.gserviceaccount.com"
        terraform_backend:
          bucket: "whitehorse-bootstrap-dev-tfstate"
          prefix: "terraform/state"
      
      test:
        gcp_project: "whitehorse-bootstrap-test"
        gcloud_home: "~/.gcloud/bootstrapper-test"
        deploy_sa: "deploy@whitehorse-bootstrap-test.iam.gserviceaccount.com"
        terraform_backend:
          bucket: "whitehorse-bootstrap-test-tfstate"
          prefix: "terraform/state"
      
      staging:
        gcp_project: "whitehorse-bootstrap-staging"
        gcloud_home: "~/.gcloud/bootstrapper-staging"
        deploy_sa: "deploy@whitehorse-bootstrap-staging.iam.gserviceaccount.com"
        terraform_backend:
          bucket: "whitehorse-bootstrap-staging-tfstate"
          prefix: "terraform/state"
      
      prod:
        gcp_project: "whitehorse-bootstrap-prod"
        gcloud_home: "~/.gcloud/bootstrapper-prod"
        deploy_sa: "deploy@whitehorse-bootstrap-prod.iam.gserviceaccount.com"
        approval_required: true
        terraform_backend:
          bucket: "whitehorse-bootstrap-prod-tfstate"
          prefix: "terraform/state"
        
    monitoring:
      enabled: true
      alerts:
        - type: "cost_anomaly"
          threshold: 150  # % of expected cost
        - type: "deployment_failure"
        - type: "security_scan_failure"
      
    security:
      vulnerability_scanning: true
      secret_scanning: true
      compliance_checks:
        - "SOC2"
        - "GDPR"
    
    # Intelligence layer configuration
    intelligence:
      auto_fix_enabled: true
      optimization_enabled: true
      predictions_enabled: true
      recommendations_enabled: true
      
    # Metadata
    created_date: "2024-08-20"
    last_updated: "2024-08-20"
    tags:
      - "infrastructure"
      - "platform"
      - "terraform"

  # Auto-discovered projects (to be migrated)
  agent-cage:
    path: /Users/jameshousteau/source_code/agent-cage
    type: vm-based
    language: python
    cloud_provider: gcp
    team: platform
    criticality: high
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "high"
    environments:
      dev:
        gcp_project: agent-cage-dev
        gcloud_home: ~/.gcloud/agent-cage-dev
      prod:
        gcp_project: agent-cage-prod
        gcloud_home: ~/.gcloud/agent-cage-prod
        approval_required: true

  claude-talk:
    path: /Users/jameshousteau/source_code/claude-talk
    type: cloud-run
    language: javascript
    cloud_provider: gcp
    team: platform
    criticality: high
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "high"
    environments:
      dev:
        gcp_project: claude-talk-dev
        gcloud_home: ~/.gcloud/claude-talk-dev
      prod:
        gcp_project: claude-talk-prod
        gcloud_home: ~/.gcloud/claude-talk-prod
        approval_required: true

  twilio-openai-voice:
    path: /Users/jameshousteau/source_code/twilio-openai-voice
    type: cloud-run
    language: python
    cloud_provider: gcp
    team: platform
    criticality: medium
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "medium"
    environments:
      dev:
        gcp_project: twilio-openai-voice-dev
      prod:
        gcp_project: twilio-openai-voice-prod

  universal-mastery-assistant:
    path: /Users/jameshousteau/source_code/universal-mastery-assistant
    type: cloud-run
    language: javascript
    cloud_provider: gcp
    team: platform
    criticality: medium
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "medium"
    environments:
      dev:
        gcp_project: universal-mastery-assistant-dev
      prod:
        gcp_project: universal-mastery-assistant-prod

  solve:
    path: /Users/jameshousteau/source_code/solve
    type: cloud-run
    language: python
    cloud_provider: gcp
    team: platform
    criticality: medium
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "medium"
    environments:
      dev:
        gcp_project: solve-dev
      prod:
        gcp_project: solve-prod

  job-hopper:
    path: /Users/jameshousteau/source_code/job-hopper
    type: cloud-run
    language: javascript
    cloud_provider: gcp
    team: platform
    criticality: low
    auto_discovered: true
    migration_status: "pending"
    migration_priority: "low"
    environments:
      dev:
        gcp_project: job-hopper-dev
      prod:
        gcp_project: job-hopper-prod

# Template configurations for different project types
templates:
  vm-based:
    description: "Virtual machine based applications"
    default_config:
      environments:
        dev:
          machine_type: "e2-micro"
          disk_size_gb: 20
        test:
          machine_type: "e2-small"
          disk_size_gb: 30
        staging:
          machine_type: "e2-medium"
          disk_size_gb: 50
        prod:
          machine_type: "e2-standard-2"
          disk_size_gb: 100
          auto_scaling:
            min_instances: 2
            max_instances: 10
    
  cloud-run:
    description: "Serverless containerized applications"
    default_config:
      environments:
        dev:
          cpu: "1"
          memory: "512Mi"
          max_instances: 10
        test:
          cpu: "1"
          memory: "1Gi"
          max_instances: 20
        staging:
          cpu: "2"
          memory: "2Gi"
          max_instances: 50
        prod:
          cpu: "2"
          memory: "4Gi"
          max_instances: 100
          min_instances: 1
  
  kubernetes:
    description: "Kubernetes-based applications"
    default_config:
      cluster_config:
        node_pool:
          machine_type: "e2-standard-4"
          disk_size_gb: 100
          auto_scaling:
            min_nodes: 1
            max_nodes: 10
      environments:
        dev:
          namespace: "dev"
          replicas: 1
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
        prod:
          namespace: "prod"
          replicas: 3
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "2"
              memory: "2Gi"

# Platform metrics and health
platform_metrics:
  last_health_check: null
  total_projects: 7
  active_projects: 1
  projects_by_type:
    infrastructure: 1
    vm-based: 1
    cloud-run: 5
    kubernetes: 0
  projects_by_language:
    bash: 1
    python: 3
    javascript: 3
    go: 0
    java: 0
  total_environments: 14
  pending_migrations: 6

# Audit trail
audit_log:
  - timestamp: "2024-08-20T00:00:00Z"
    action: "registry_initialized"
    user: "system"
    details: "Project registry initialized with bootstrapper project"
  - timestamp: "2024-08-20T00:00:00Z"
    action: "registry_enhanced"
    user: "agent-8"
    details: "Enhanced registry with templates and migration tracking"