#!/usr/bin/env bash
# AWS Per-Repository Isolation Configuration
# This file provides complete isolation for AWS operations within this repository
# Generated by the Universal Project Platform - Agent 5 Isolation Layer

# Critical: Export AWS configuration
export AWS_ACCOUNT_ID="{{AWS_ACCOUNT_ID}}"
export AWS_REGION="{{AWS_REGION}}"
export AWS_ENVIRONMENT="{{ENVIRONMENT}}"
export AWS_PROJECT_NAME="{{PROJECT_NAME}}"

# Per-repository AWS configuration directory
export REPO_AWS_HOME="$HOME/.aws/{{PROJECT_NAME}}-{{ENVIRONMENT}}"
export AWS_CONFIG_FILE="$REPO_AWS_HOME/config"
export AWS_SHARED_CREDENTIALS_FILE="$REPO_AWS_HOME/credentials"

# Profile configuration
export AWS_PROFILE="{{AWS_PROFILE:-default}}"

# Role-based authentication
{{#AWS_ROLE_ARN}}
export AWS_ROLE_ARN="{{AWS_ROLE_ARN}}"
export AWS_ROLE_SESSION_NAME="{{AWS_ROLE_SESSION_NAME:-isolation-session}}"
{{/AWS_ROLE_ARN}}

# OIDC/Workload Identity configuration for CI/CD
{{#AWS_ROLE_TO_ASSUME}}
export AWS_ROLE_TO_ASSUME="{{AWS_ROLE_TO_ASSUME}}"
export AWS_WEB_IDENTITY_TOKEN_FILE="{{AWS_WEB_IDENTITY_TOKEN_FILE:-}}"
{{/AWS_ROLE_TO_ASSUME}}

# Security and Compliance
export ISOLATION_LEVEL="{{ISOLATION_LEVEL:-standard}}"  # strict, standard, relaxed
export PRODUCTION_MODE="{{PRODUCTION_MODE:-false}}"      # true/false
export AUDIT_ENABLED="{{AUDIT_ENABLED:-true}}"          # true/false

# Cost Control
{{#COST_THRESHOLD}}
export AWS_COST_THRESHOLD_USD="{{COST_THRESHOLD}}"
{{/COST_THRESHOLD}}

# Monitoring and Alerting
{{#MONITORING_ACCOUNT}}
export AWS_MONITORING_ACCOUNT="{{MONITORING_ACCOUNT}}"
{{/MONITORING_ACCOUNT}}

# Default tags for all resources
export AWS_DEFAULT_TAGS='{
    "Environment": "{{ENVIRONMENT}}",
    "Project": "{{PROJECT_NAME}}",
    "ManagedBy": "universal-project-platform",
    "IsolationLayer": "agent-5",
    "Repository": "{{REPOSITORY_NAME:-unknown}}"
}'

# Terraform isolation
export TF_VAR_aws_account_id="$AWS_ACCOUNT_ID"
export TF_VAR_aws_region="$AWS_REGION"
export TF_VAR_environment="$AWS_ENVIRONMENT"
export TF_VAR_project_name="$AWS_PROJECT_NAME"

# Docker/Container isolation
export DOCKER_DEFAULT_PLATFORM=linux/amd64
{{#ECR_REGISTRY}}
export ECR_REGISTRY="{{ECR_REGISTRY}}"
{{/ECR_REGISTRY}}

# Python isolation (if applicable)
{{#PYTHON_PROJECT}}
export PYTHONPATH="$PWD/src:$PYTHONPATH"
export PIP_REQUIRE_VIRTUALENV=true
{{/PYTHON_PROJECT}}

# Node.js isolation (if applicable)
{{#NODE_PROJECT}}
export NODE_ENV="$AWS_ENVIRONMENT"
{{/NODE_PROJECT}}

# Validation markers
export AWS_ISOLATION_CONFIG_VERSION="2.0.0"
export AWS_ISOLATION_INITIALIZED="$(date -u +%Y-%m-%dT%H:%M:%SZ)"

# Auto-bootstrap on first load
if [[ ! -f "$REPO_AWS_HOME/.initialized" ]]; then
    echo "üîí First-time AWS isolation setup required..."
    if [[ -f "./scripts/bootstrap_aws.sh" ]]; then
        ./scripts/bootstrap_aws.sh
    elif [[ -f "../../isolation/aws/scripts/bootstrap_aws.sh" ]]; then
        ../../isolation/aws/scripts/bootstrap_aws.sh
    else
        echo "Warning: AWS bootstrap script not found"
        echo "Run: bootstrap isolation setup-aws {{PROJECT_NAME}}"
    fi
fi

# Production safety reminder
if [[ "$PRODUCTION_MODE" == "true" ]]; then
    echo "‚ö†Ô∏è  PRODUCTION AWS ENVIRONMENT: $AWS_ACCOUNT_ID"
    echo "   Use 'export CONFIRM_PROD=I_UNDERSTAND' for destructive operations"
fi

# Load project-specific overrides if they exist
if [[ -f "./.envrc.aws.local" ]]; then
    source ./.envrc.aws.local
fi