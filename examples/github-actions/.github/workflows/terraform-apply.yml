name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
      - '**.tfvars'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      confirm:
        description: 'Type "apply" to confirm deployment'
        required: true
        type: string

env:
  TF_VERSION: '1.5.7'
  TF_IN_AUTOMATION: 'true'
  GOOGLE_CLOUD_PROJECT: ${{ vars.GCP_PROJECT_ID }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WIF_PROVIDER }}
  SERVICE_ACCOUNT: ${{ vars.WIF_SERVICE_ACCOUNT }}

permissions:
  contents: read
  id-token: write
  issues: write

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Set Environment
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            # Auto-deploy to dev on push to main
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  terraform-apply:
    needs: determine-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.environment }}

    steps:
      - name: Validate Confirmation
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.confirm != 'apply'
        run: |
          echo "Deployment cancelled. You must type 'apply' to confirm."
          exit 1

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: 'access_token'
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=terraform-state-${{ vars.GCP_PROJECT_ID }}" \
            -backend-config="prefix=${{ needs.determine-environment.outputs.environment }}/bootstrap"

      - name: Terraform Workspace
        run: |
          terraform workspace select ${{ needs.determine-environment.outputs.environment }} || \
          terraform workspace new ${{ needs.determine-environment.outputs.environment }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var-file="environments/${{ needs.determine-environment.outputs.environment }}.tfvars" \
            -out=tfplan \
            -input=false

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply \
            -input=false \
            -auto-approve \
            tfplan

      - name: Terraform Output
        id: output
        run: |
          echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Create Deployment Issue
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Deployment to ${{ needs.determine-environment.outputs.environment }} - ${new Date().toISOString()}`,
              body: `## Deployment Summary

              - **Environment**: ${{ needs.determine-environment.outputs.environment }}
              - **Triggered by**: @${{ github.actor }}
              - **Commit**: ${{ github.sha }}
              - **Status**: âœ… Success

              ### Resources Deployed
              Check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
              `,
              labels: ['deployment', '${{ needs.determine-environment.outputs.environment }}']
            });
            console.log(`Created issue #${issue.data.number}`);

      - name: Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment to ${{ needs.determine-environment.outputs.environment }}: ${{ job.status }}
            Triggered by: ${{ github.actor }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true