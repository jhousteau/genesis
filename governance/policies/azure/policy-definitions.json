{
  "policyDefinitions": {
    "requireTags": {
      "properties": {
        "displayName": "Require specific tags on resources",
        "description": "Enforces existence of required tags on all resources",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "anyOf": [
              {
                "field": "tags['Environment']",
                "exists": "false"
              },
              {
                "field": "tags['Project']",
                "exists": "false"
              },
              {
                "field": "tags['Owner']",
                "exists": "false"
              },
              {
                "field": "tags['CostCenter']",
                "exists": "false"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },

    "enforceNamingConvention": {
      "properties": {
        "displayName": "Enforce naming convention for resources",
        "description": "Ensures all resources follow organizational naming standards",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "not": {
              "field": "name",
              "like": "[parameters('namePattern')]"
            }
          },
          "then": {
            "effect": "deny"
          }
        },
        "parameters": {
          "namePattern": {
            "type": "string",
            "defaultValue": "*-[parameters('environment')]-*"
          }
        }
      }
    },

    "requireEncryption": {
      "properties": {
        "displayName": "Require encryption for storage accounts",
        "description": "Ensures all storage accounts have encryption enabled",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/encryption.services.blob.enabled",
                "notEquals": "true"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },

    "restrictVMSizes": {
      "properties": {
        "displayName": "Allowed virtual machine size SKUs",
        "description": "Restricts the VM sizes that can be deployed",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              {
                "not": {
                  "field": "Microsoft.Compute/virtualMachines/sku.name",
                  "in": "[parameters('allowedSKUs')]"
                }
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        },
        "parameters": {
          "allowedSKUs": {
            "type": "array",
            "defaultValue": [
              "Standard_B1s",
              "Standard_B2s",
              "Standard_B4ms",
              "Standard_D2s_v3",
              "Standard_D4s_v3"
            ]
          }
        }
      }
    },

    "restrictLocations": {
      "properties": {
        "displayName": "Allowed locations",
        "description": "Restricts resources to approved Azure regions",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "not": {
              "field": "location",
              "in": "[parameters('allowedLocations')]"
            }
          },
          "then": {
            "effect": "deny"
          }
        },
        "parameters": {
          "allowedLocations": {
            "type": "array",
            "defaultValue": [
              "East US",
              "West US 2",
              "West Europe"
            ]
          }
        }
      }
    },

    "requireManagedDisks": {
      "properties": {
        "displayName": "Require managed disks for VMs",
        "description": "Ensures VMs use managed disks instead of unmanaged disks",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.managedDisk",
                "exists": "false"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },

    "enforceHTTPS": {
      "properties": {
        "displayName": "Secure transfer to storage accounts should be enabled",
        "description": "Requires HTTPS for all storage account access",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
                "notEquals": "true"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },

    "preventPublicStorage": {
      "properties": {
        "displayName": "Storage accounts should restrict network access",
        "description": "Prevents creation of storage accounts with public access",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                "equals": "Allow"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    },

    "requireBackup": {
      "properties": {
        "displayName": "Azure Backup should be enabled for Virtual Machines",
        "description": "Ensures VMs have backup protection enabled",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Compute/virtualMachines"
              },
              {
                "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.createOption",
                "equals": "FromImage"
              }
            ]
          },
          "then": {
            "effect": "auditIfNotExists",
            "details": {
              "type": "Microsoft.RecoveryServices/backupprotecteditems"
            }
          }
        }
      }
    },

    "requireNetworkSecurityGroup": {
      "properties": {
        "displayName": "Subnets should be associated with a Network Security Group",
        "description": "Ensures all subnets have NSG protection",
        "mode": "Indexed",
        "policyRule": {
          "if": {
            "allOf": [
              {
                "field": "type",
                "equals": "Microsoft.Network/virtualNetworks/subnets"
              },
              {
                "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup",
                "exists": "false"
              }
            ]
          },
          "then": {
            "effect": "deny"
          }
        }
      }
    }
  },

  "initiatives": {
    "securityBaseline": {
      "properties": {
        "displayName": "Security Baseline Initiative",
        "description": "Comprehensive security policies for Azure resources",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireTags"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireEncryption"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/enforceHTTPS"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/preventPublicStorage"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireManagedDisks"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireNetworkSecurityGroup"
          }
        ]
      }
    },

    "governanceBaseline": {
      "properties": {
        "displayName": "Governance Baseline Initiative",
        "description": "Resource governance and management policies",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireTags"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/enforceNamingConvention"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/restrictVMSizes"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/restrictLocations"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/requireBackup"
          }
        ]
      }
    }
  },

  "assignments": {
    "production": {
      "initiative": "securityBaseline",
      "enforcementMode": "Default"
    },
    "development": {
      "initiative": "governanceBaseline",
      "enforcementMode": "DoNotEnforce"
    }
  }
}
