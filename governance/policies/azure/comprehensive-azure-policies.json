{
  "ComprehensiveAzurePolicies": {
    "Version": "2.0.0",
    "Description": "Comprehensive Azure governance policies for multi-cloud compliance",
    "LastUpdated": "2024-08-20",
    "PolicyFramework": "Multi-Cloud Governance",

    "PolicyDefinitions": {
      "SecurityBaseline": [
        {
          "name": "require-resource-tags",
          "displayName": "Require specific tags on resources",
          "description": "Enforces the existence of required tags on all resources",
          "policyType": "Custom",
          "mode": "Indexed",
          "parameters": {
            "tagNames": {
              "type": "Array",
              "metadata": {
                "displayName": "Tag Names",
                "description": "List of tag names that must be present"
              },
              "defaultValue": [
                "Environment",
                "Project",
                "CostCenter",
                "Owner"
              ]
            }
          },
          "policyRule": {
            "if": {
              "anyOf": [
                {
                  "field": "tags['Environment']",
                  "exists": "false"
                },
                {
                  "field": "tags['Project']",
                  "exists": "false"
                },
                {
                  "field": "tags['CostCenter']",
                  "exists": "false"
                },
                {
                  "field": "tags['Owner']",
                  "exists": "false"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "require-storage-encryption",
          "displayName": "Require storage account encryption",
          "description": "Ensures all storage accounts have encryption enabled",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Storage/storageAccounts"
                },
                {
                  "field": "Microsoft.Storage/storageAccounts/encryption.services.blob.enabled",
                  "notEquals": "true"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "require-sql-encryption",
          "displayName": "Require SQL database encryption",
          "description": "Ensures SQL databases have transparent data encryption enabled",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Sql/servers/databases"
                },
                {
                  "field": "name",
                  "notEquals": "master"
                }
              ]
            },
            "then": {
              "effect": "deployIfNotExists",
              "details": {
                "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                "name": "current",
                "roleDefinitionIds": [
                  "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"
                ],
                "deployment": {
                  "properties": {
                    "mode": "incremental",
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "fullDbName": {
                          "type": "string"
                        }
                      },
                      "resources": [
                        {
                          "name": "[concat(parameters('fullDbName'), '/current')]",
                          "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
                          "apiVersion": "2014-04-01",
                          "properties": {
                            "status": "Enabled"
                          }
                        }
                      ]
                    },
                    "parameters": {
                      "fullDbName": {
                        "value": "[field('fullName')]"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "name": "require-vm-managed-disks",
          "displayName": "Require VMs to use managed disks",
          "description": "Ensures virtual machines use managed disks for better security and management",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.vhd",
                  "exists": "true"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "require-network-security-groups",
          "displayName": "Require network security groups on subnets",
          "description": "Ensures all subnets have network security groups attached",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                  "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup",
                  "exists": "false"
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        }
      ],

      "ComplianceEnforcement": [
        {
          "name": "audit-diagnostic-settings",
          "displayName": "Audit diagnostic settings for Azure resources",
          "description": "Audits that diagnostic settings are configured for Azure resources",
          "policyType": "Custom",
          "mode": "Indexed",
          "parameters": {
            "logAnalyticsWorkspace": {
              "type": "String",
              "metadata": {
                "displayName": "Log Analytics Workspace",
                "description": "The Log Analytics Workspace to send logs to"
              }
            }
          },
          "policyRule": {
            "if": {
              "field": "type",
              "in": [
                "Microsoft.KeyVault/vaults",
                "Microsoft.Network/networkSecurityGroups",
                "Microsoft.Storage/storageAccounts",
                "Microsoft.Sql/servers/databases"
              ]
            },
            "then": {
              "effect": "auditIfNotExists",
              "details": {
                "type": "Microsoft.Insights/diagnosticSettings",
                "existenceCondition": {
                  "allOf": [
                    {
                      "field": "Microsoft.Insights/diagnosticSettings/logs.enabled",
                      "equals": "true"
                    },
                    {
                      "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                      "equals": "[parameters('logAnalyticsWorkspace')]"
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "name": "require-activity-log-retention",
          "displayName": "Require activity log retention",
          "description": "Ensures activity logs are retained for the required period",
          "policyType": "Custom",
          "mode": "All",
          "parameters": {
            "retentionDays": {
              "type": "Integer",
              "metadata": {
                "displayName": "Retention Days",
                "description": "Number of days to retain activity logs"
              },
              "defaultValue": 365
            }
          },
          "policyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Insights/logProfiles"
            },
            "then": {
              "effect": "auditIfNotExists",
              "details": {
                "type": "Microsoft.Insights/logProfiles",
                "existenceCondition": {
                  "field": "Microsoft.Insights/logProfiles/retentionPolicy.days",
                  "greaterOrEquals": "[parameters('retentionDays')]"
                }
              }
            }
          }
        }
      ],

      "CostOptimization": [
        {
          "name": "restrict-vm-sizes",
          "displayName": "Restrict allowed VM sizes",
          "description": "Restricts the VM sizes that can be deployed to control costs",
          "policyType": "Custom",
          "mode": "Indexed",
          "parameters": {
            "allowedVMSizes": {
              "type": "Array",
              "metadata": {
                "displayName": "Allowed VM Sizes",
                "description": "List of VM sizes that are allowed"
              },
              "defaultValue": [
                "Standard_B1s",
                "Standard_B2s",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_F2s_v2",
                "Standard_F4s_v2"
              ]
            }
          },
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "not": {
                    "field": "Microsoft.Compute/virtualMachines/sku.name",
                    "in": "[parameters('allowedVMSizes')]"
                  }
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "require-cost-center-tag",
          "displayName": "Require cost center tag for billing",
          "description": "Ensures resources have cost center tags for proper cost allocation",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "field": "tags['CostCenter']",
              "exists": "false"
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "auto-shutdown-vms",
          "displayName": "Auto-shutdown for development VMs",
          "description": "Automatically configures auto-shutdown for development VMs",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "tags['Environment']",
                  "in": [
                    "development",
                    "staging",
                    "test"
                  ]
                }
              ]
            },
            "then": {
              "effect": "deployIfNotExists",
              "details": {
                "type": "Microsoft.DevTestLab/schedules",
                "roleDefinitionIds": [
                  "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
                ],
                "deployment": {
                  "properties": {
                    "mode": "incremental",
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "vmName": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        }
                      },
                      "resources": [
                        {
                          "type": "Microsoft.DevTestLab/schedules",
                          "name": "[concat('shutdown-computevm-', parameters('vmName'))]",
                          "apiVersion": "2018-09-15",
                          "location": "[parameters('location')]",
                          "properties": {
                            "status": "Enabled",
                            "taskType": "ComputeVmShutdownTask",
                            "dailyRecurrence": {
                              "time": "1900"
                            },
                            "timeZoneId": "UTC",
                            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                          }
                        }
                      ]
                    },
                    "parameters": {
                      "vmName": {
                        "value": "[field('name')]"
                      },
                      "location": {
                        "value": "[field('location')]"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],

      "DataProtection": [
        {
          "name": "require-key-vault-for-secrets",
          "displayName": "Require Key Vault for storing secrets",
          "description": "Ensures secrets are stored in Azure Key Vault",
          "policyType": "Custom",
          "mode": "All",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "in": [
                    "Microsoft.Web/sites",
                    "Microsoft.Logic/workflows",
                    "Microsoft.Automation/automationAccounts"
                  ]
                }
              ]
            },
            "then": {
              "effect": "auditIfNotExists",
              "details": {
                "type": "Microsoft.KeyVault/vaults",
                "existenceScope": "resourceGroup"
              }
            }
          }
        },
        {
          "name": "require-backup-for-vms",
          "displayName": "Require backup for virtual machines",
          "description": "Ensures virtual machines have backup configured",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                  "field": "tags['Environment']",
                  "in": [
                    "production",
                    "staging"
                  ]
                }
              ]
            },
            "then": {
              "effect": "deployIfNotExists",
              "details": {
                "type": "Microsoft.RecoveryServices/backupprotecteditems",
                "roleDefinitionIds": [
                  "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
                ],
                "deployment": {
                  "properties": {
                    "mode": "incremental",
                    "template": {
                      "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                      "contentVersion": "1.0.0.0",
                      "parameters": {
                        "vmName": {
                          "type": "string"
                        },
                        "vaultName": {
                          "type": "string",
                          "defaultValue": "DefaultBackupVault"
                        }
                      },
                      "variables": {
                        "backupFabric": "Azure",
                        "backupPolicy": "DefaultPolicy",
                        "v2VmType": "Microsoft.Compute/virtualMachines",
                        "v2VmContainer": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('vmName'))]",
                        "v2Vm": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', parameters('vmName'))]"
                      },
                      "resources": [
                        {
                          "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                          "name": "[concat(parameters('vaultName'), '/', variables('backupFabric'), '/', variables('v2VmContainer'), '/', variables('v2Vm'))]",
                          "apiVersion": "2016-06-01",
                          "properties": {
                            "protectedItemType": "[variables('v2VmType')]",
                            "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), variables('backupPolicy'))]",
                            "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                          }
                        }
                      ]
                    },
                    "parameters": {
                      "vmName": {
                        "value": "[field('name')]"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ],

      "NetworkSecurity": [
        {
          "name": "deny-unrestricted-ssh-rdp",
          "displayName": "Deny unrestricted SSH/RDP access",
          "description": "Denies network security group rules that allow unrestricted SSH or RDP access",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                },
                {
                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                  "equals": "Allow"
                },
                {
                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                  "equals": "Inbound"
                },
                {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                          "equals": "22"
                        },
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                          "equals": "*"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                          "equals": "3389"
                        },
                        {
                          "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                          "equals": "*"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "then": {
              "effect": "deny"
            }
          }
        },
        {
          "name": "require-waf-for-app-gateway",
          "displayName": "Require WAF for Application Gateway",
          "description": "Ensures Application Gateway has Web Application Firewall enabled",
          "policyType": "Custom",
          "mode": "Indexed",
          "policyRule": {
            "if": {
              "field": "type",
              "equals": "Microsoft.Network/applicationGateways"
            },
            "then": {
              "effect": "auditIfNotExists",
              "details": {
                "type": "Microsoft.Network/applicationGateways",
                "existenceCondition": {
                  "field": "Microsoft.Network/applicationGateways/webApplicationFirewallConfiguration.enabled",
                  "equals": "true"
                }
              }
            }
          }
        }
      ]
    },

    "InitiativeDefinitions": {
      "SecurityBaseline": {
        "name": "azure-security-baseline",
        "displayName": "Azure Security Baseline Initiative",
        "description": "Collection of security policies for Azure baseline compliance",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-resource-tags",
            "parameters": {
              "tagNames": {
                "value": [
                  "Environment",
                  "Project",
                  "CostCenter",
                  "Owner"
                ]
              }
            }
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-storage-encryption"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-sql-encryption"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-vm-managed-disks"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-network-security-groups"
          }
        ]
      },

      "ComplianceFramework": {
        "name": "multi-compliance-framework",
        "displayName": "Multi-Compliance Framework Initiative",
        "description": "Comprehensive compliance framework for multiple regulations",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/audit-diagnostic-settings",
            "parameters": {
              "logAnalyticsWorkspace": {
                "value": "[parameters('logAnalyticsWorkspaceId')]"
              }
            }
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-activity-log-retention",
            "parameters": {
              "retentionDays": {
                "value": 2555
              }
            }
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-key-vault-for-secrets"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-backup-for-vms"
          }
        ]
      },

      "CostOptimization": {
        "name": "cost-optimization-framework",
        "displayName": "Cost Optimization Framework Initiative",
        "description": "Policies to optimize and control costs in Azure",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/restrict-vm-sizes",
            "parameters": {
              "allowedVMSizes": {
                "value": [
                  "Standard_B1s",
                  "Standard_B2s",
                  "Standard_D2s_v3",
                  "Standard_D4s_v3",
                  "Standard_F2s_v2",
                  "Standard_F4s_v2"
                ]
              }
            }
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-cost-center-tag"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/auto-shutdown-vms"
          }
        ]
      },

      "NetworkSecurity": {
        "name": "network-security-framework",
        "displayName": "Network Security Framework Initiative",
        "description": "Network security policies for Azure resources",
        "policyDefinitions": [
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/deny-unrestricted-ssh-rdp"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-waf-for-app-gateway"
          },
          {
            "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/require-network-security-groups"
          }
        ]
      }
    },

    "RoleDefinitions": {
      "GovernanceAdmin": {
        "Name": "Governance Administrator",
        "Description": "Full access to governance policies and compliance management",
        "Actions": [
          "Microsoft.Authorization/policyDefinitions/*",
          "Microsoft.Authorization/policyAssignments/*",
          "Microsoft.Authorization/policySetDefinitions/*",
          "Microsoft.PolicyInsights/*",
          "Microsoft.Management/managementGroups/read",
          "Microsoft.Resources/subscriptions/resourceGroups/read",
          "Microsoft.Resources/subscriptions/read",
          "Microsoft.Support/*"
        ],
        "NotActions": [],
        "DataActions": [],
        "NotDataActions": [],
        "AssignableScopes": [
          "/subscriptions/{subscription-id}",
          "/providers/Microsoft.Management/managementGroups/{management-group-id}"
        ]
      },

      "ComplianceAnalyst": {
        "Name": "Compliance Analyst",
        "Description": "Read access to compliance data and policies",
        "Actions": [
          "Microsoft.Authorization/policyDefinitions/read",
          "Microsoft.Authorization/policyAssignments/read",
          "Microsoft.Authorization/policySetDefinitions/read",
          "Microsoft.PolicyInsights/policyEvents/read",
          "Microsoft.PolicyInsights/policyStates/read",
          "Microsoft.PolicyInsights/remediations/read",
          "Microsoft.Management/managementGroups/read",
          "Microsoft.Resources/subscriptions/resourceGroups/read",
          "Microsoft.Resources/subscriptions/read"
        ],
        "NotActions": [],
        "DataActions": [],
        "NotDataActions": [],
        "AssignableScopes": [
          "/subscriptions/{subscription-id}",
          "/providers/Microsoft.Management/managementGroups/{management-group-id}"
        ]
      },

      "CostOptimizer": {
        "Name": "Cost Optimizer",
        "Description": "Permissions to optimize and manage costs",
        "Actions": [
          "Microsoft.Compute/virtualMachines/read",
          "Microsoft.Compute/virtualMachines/start/action",
          "Microsoft.Compute/virtualMachines/deallocate/action",
          "Microsoft.Compute/virtualMachines/restart/action",
          "Microsoft.Storage/storageAccounts/read",
          "Microsoft.Storage/storageAccounts/write",
          "Microsoft.Sql/servers/databases/read",
          "Microsoft.Sql/servers/databases/write",
          "Microsoft.DevTestLab/schedules/*",
          "Microsoft.Advisor/recommendations/read",
          "Microsoft.CostManagement/*"
        ],
        "NotActions": [],
        "DataActions": [],
        "NotDataActions": [],
        "AssignableScopes": [
          "/subscriptions/{subscription-id}"
        ]
      }
    },

    "ComplianceFrameworks": {
      "SOX": {
        "RequiredPolicies": [
          "require-resource-tags",
          "audit-diagnostic-settings",
          "require-activity-log-retention",
          "require-backup-for-vms"
        ],
        "AuditRequirements": {
          "LogRetention": "7 years",
          "ImmutableLogs": true,
          "AccessLogging": true,
          "ChangeTracking": true
        }
      },

      "HIPAA": {
        "RequiredPolicies": [
          "require-storage-encryption",
          "require-sql-encryption",
          "require-vm-managed-disks",
          "require-key-vault-for-secrets",
          "deny-unrestricted-ssh-rdp"
        ],
        "DataProtection": {
          "EncryptionAtRest": "Required",
          "EncryptionInTransit": "Required",
          "AccessControls": "Role-based",
          "AuditLogging": "Comprehensive"
        }
      },

      "PCI-DSS": {
        "RequiredPolicies": [
          "require-storage-encryption",
          "require-sql-encryption",
          "deny-unrestricted-ssh-rdp",
          "require-waf-for-app-gateway",
          "require-network-security-groups"
        ],
        "NetworkSecurity": {
          "Segmentation": "Required",
          "Firewalls": "Mandatory",
          "IntrusionDetection": "Required",
          "VulnerabilityScanning": "Regular"
        }
      },

      "GDPR": {
        "RequiredPolicies": [
          "require-storage-encryption",
          "require-resource-tags",
          "audit-diagnostic-settings",
          "require-key-vault-for-secrets"
        ],
        "DataPrivacy": {
          "DataMinimization": "Enforced",
          "ConsentManagement": "Automated",
          "DataRetention": "Policy-driven",
          "BreachNotification": "Automated"
        }
      }
    },

    "AutomationWorkflows": {
      "PolicyRemediation": {
        "RemediationTasks": [
          {
            "name": "encrypt-unencrypted-storage",
            "trigger": "PolicyViolation",
            "policyDefinition": "require-storage-encryption",
            "action": "EnableStorageEncryption",
            "automation": "Azure Automation Runbook"
          },
          {
            "name": "add-missing-tags",
            "trigger": "PolicyViolation",
            "policyDefinition": "require-resource-tags",
            "action": "AddRequiredTags",
            "automation": "Logic App Workflow"
          },
          {
            "name": "configure-diagnostic-settings",
            "trigger": "PolicyViolation",
            "policyDefinition": "audit-diagnostic-settings",
            "action": "ConfigureDiagnostics",
            "automation": "Azure Function"
          }
        ]
      },

      "ComplianceReporting": {
        "ReportingSchedule": {
          "Executive": "Monthly",
          "Operational": "Weekly",
          "Compliance": "Daily"
        },
        "ReportTypes": [
          "ComplianceStatus",
          "PolicyViolations",
          "RemediationStatus",
          "CostOptimization",
          "SecurityPosture"
        ],
        "DeliveryMethods": [
          "Email",
          "Dashboard",
          "API",
          "PowerBI"
        ]
      },

      "CostOptimization": {
        "AutomationTriggers": [
          "ResourceUtilization",
          "CostThresholds",
          "ScheduledAnalysis",
          "PolicyViolation"
        ],
        "OptimizationActions": [
          "VMRightSizing",
          "AutoShutdown",
          "StorageTierOptimization",
          "ReservedInstanceRecommendations"
        ]
      }
    },

    "ManagementGroupStructure": {
      "HierarchyDesign": {
        "Root": "Tenant Root Group",
        "Levels": [
          {
            "Level": 1,
            "Name": "Organization",
            "Purpose": "Top-level organization policies"
          },
          {
            "Level": 2,
            "Name": "Environment",
            "Purpose": "Environment-specific policies (prod, dev, test)",
            "Children": [
              "Production",
              "Non-Production"
            ]
          },
          {
            "Level": 3,
            "Name": "Business Unit",
            "Purpose": "Business unit specific governance"
          },
          {
            "Level": 4,
            "Name": "Application",
            "Purpose": "Application-specific policies"
          }
        ]
      },

      "PolicyAssignment": {
        "InheritanceModel": "Hierarchical",
        "AssignmentStrategy": {
          "Organization": [
            "azure-security-baseline",
            "multi-compliance-framework"
          ],
          "Production": [
            "network-security-framework",
            "data-protection-enhanced"
          ],
          "Non-Production": [
            "cost-optimization-framework",
            "development-policies"
          ]
        }
      }
    }
  }
}
