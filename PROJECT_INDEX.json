{"at":"2025-08-28T15:07:57.978190","root":".","tree":[".","\u251c\u2500\u2500 bootstrap/ (2 files)","\u2502   \u251c\u2500\u2500 src/ (1 files)","\u2502   \u251c\u2500\u2500 tests/ (1 files)","\u2502   \u2514\u2500\u2500 README.md","\u251c\u2500\u2500 docs/","\u2502   \u251c\u2500\u2500 api/","\u2502   \u251c\u2500\u2500 architecture/","\u2502   \u251c\u2500\u2500 guides/","\u2502   \u2514\u2500\u2500 README.md","\u251c\u2500\u2500 genesis/ (21 files)","\u2502   \u251c\u2500\u2500 commands/ (2 files)","\u2502   \u251c\u2500\u2500 core/ (15 files)","\u2502   \u2502   \u251c\u2500\u2500 autofix/ (6 files)","\u2502   \u2502   \u2502   \u2514\u2500\u2500 README.md","\u2502   \u2502   \u251c\u2500\u2500 context/ (2 files)","\u2502   \u2502   \u2514\u2500\u2500 errors/ (2 files)","\u2502   \u2502       \u2514\u2500\u2500 README.md","\u2502   \u251c\u2500\u2500 testing/ (2 files)","\u2502   \u2514\u2500\u2500 README.md"],"stats":{"total_files":61,"total_directories":54,"fully_parsed":{"shell":4,"python":35,"javascript":1,"typescript":10},"listed_only":{"shell":1,"json":9,"go":1},"markdown_files":19},"f":{"bootstrap/sr/bootstrap.sh":["s",["log:0:():error_exit:","error_exit:0:():show_usage:","show_usage:0:()::","create_project:0:()::"]],"bootstrap/t/test_bootstrap.py":["p",{"TestBootstrapScript":["11",["test_script_exists_and_executable:14:(self)::Test that bootstrap script exists and is executable.","test_help_flag_works:20:(self)::Test that --help flag shows usage information.","test_insufficient_arguments_shows_usage:34:(self)::Test that insufficient arguments shows usage and exits with error.","test_python_api_project_creation:45:(self)::Test Python API project creation.","test_typescript_service_project_creation:83:(self)::Test TypeScript service project creation.","test_cli_tool_project_creation:118:(self)::Test CLI tool project creation.","test_git_initialization_works:151:(self)::Test that Git initialization works when not skipped.","test_unknown_option_fails:178:(self)::Test that unknown options cause script to fail.","test_script_syntax_validation:191:(self)::Test that the script has valid bash syntax.","test_line_count_meets_requirement:201:(self)::Test that script meets the ~150 line requirement.","test_makefile_content_valid:211:(self)::Test that generated Makefile has valid content.","test_gitignore_content_valid:244:(self)::Test that generated .gitignore has appropriate entries."]]}],"conftest.py":["p",["genesis_root:21:()>Path::Get Genesis project root directory.","temp_dir:28:()>Generator[Path, None, None]::Create temporary directory for test isolation.","mock_genesis_project:35:(temp_dir:Path)>Path::Create mock Genesis project structure for testing.","mock_git:64:()::Mock git operations to avoid actual git calls in tests.","mock_shell_commands:75:():mock_run:Mock shell command execution for testing scripts.","ai_safety_validator:95:():__init__,validate_component_isolation,validate_file_count:Fixture for validating AI safety constraints.","sample_project_files:143:(temp_dir:Path)>Path::Create sample project files for testing bootstrap functionality.","mock_worktree_environment:170:(temp_dir:Path, mock_git)::Create mock environment for testing worktree operations.","clean_environment:201:()::Clean up environment variables and state between tests.","capture_subprocess:216:():mock_run:Capture subprocess calls for verification in tests.","pytest_collection_modifyitems:233:(config, items)::Modify test items during collection.","pytest_configure:245:(config)::Configure pytest with custom settings.","pytest_runtest_setup:261:(item)::Setup before each test runs.","pytest_addoption:270:(parser)::Add custom command line options."]],"genesis/cli.py":["p",["find_genesis_root:20:()>Optional[Path]::Find Genesis project root by looking for CLAUDE.md.","get_component_path:29:(component:str)>Optional[Path]:find_genesis_root:Get path to a Genesis component.","cli:42:(ctx):find_genesis_root:Genesis - Development toolkit for lean, AI-safe projects.","bootstrap:64:(ctx, name:str, project_type:str, target_path:Optional[str], skip_git:bool)::Create new project with Genesis patterns and tooling.","worktree:77:(ctx, name:str, focus_path:str, max_files:int, verify:bool)::Create AI-safe sparse worktree with file limits.","commit:108:(ctx, message:Optional[str])::Smart commit with quality gates and pre-commit hooks.","clean:143:(ctx, worktrees:bool, artifacts:bool, clean_all:bool)::Clean workspace: remove old worktrees and build artifacts.","sync:248:(ctx)::Update shared components and dependencies.","status:285:(ctx, verbose:bool)::Check Genesis project health and component status."]],"genesis/commands/bootstrap.py":["p",["find_genesis_root:27:()>Optional[Path]::Find Genesis project root by looking for CLAUDE.md.","get_template_path:36:(project_type:str)>Optional[Path]:find_genesis_root:Get path to project template.","validate_project_name:46:(name:str)>None::Validate project name meets requirements.","create_project_directory:63:(project_path:Path)>None::Create project directory structure.","process_template_file:79:(template_file:Path, target_file:Path, substitutions:Dict[str, str])>None::Process a template file with substitutions.","copy_template_structure:102:(template_path:Path, project_path:Path, project_name:str)>None:process_template_file:Copy and process template structure.","initialize_git_repo:155:(project_path:Path, skip_git:bool)>None::Initialize Git repository in project.","bootstrap_project:195:(name:str, project_type:str = \"python-api\", target_path:Optional[str] = None, skip_git:bool = False,)>Path:copy_template_structure,create_project_directory,get_template_path,initialize_git_repo,validate_project_name:Bootstrap a new project with Genesis patterns.","bootstrap_command:247:(name:str, project_type:str, target_path:Optional[str], skip_git:bool)>None:bootstrap_project:Bootstrap command implementation for CLI integration."]],"genesis/core/autofix/convergence.py":["p",{"ConvergenceResult":["14",[]],"ConvergentFixer":["23",["__init__:26:(self, max_runs:int = 5, dry_run:bool = False)::","run_until_stable:36:(self, name:str, command:str)>ConvergenceResult::","run_multiple_until_stable:125:(self, commands:list[tuple[str, str]])>list[ConvergenceResult]:run_until_stable:"]]}],"genesis/core/autofix/detectors.py":["p",{"ProjectInfo":["33",["__post_init__:43:(self)::"]],"ProjectDetector":["48",["__init__:51:(self, project_root:Optional[Path] = None)::","detect:59:(self)>ProjectInfo:_detect_available_tools,_detect_project_type,_detect_python_subtype,_has_docker,_has_precommit:","_detect_project_type:95:(self)>ProjectType::Detect basic project type from files.","_detect_python_subtype:123:(self)>PythonSubtype::Detect Python project subtype.","_has_docker:153:(self)>bool::Check if project has Docker files.","_has_precommit:158:(self)>bool::Check if project has pre-commit configuration.","_detect_available_tools:164:(self, project_type:ProjectType, python_subtype:Optional[PythonSubtype])>dict[str, bool]:_command_exists,_get_poetry_dev_tools,_has_docker,_has_npm_bin,_has_precommit:","_command_exists:216:(self, command:str)>bool::Check if a command exists in PATH.","_has_npm_bin:224:(self, tool:str)>bool::Check if npm binary exists in node_modules.","_get_poetry_dev_tools:229:(self)>list[str]::Get list of tools managed by Poetry."]]}],"genesis/core/autofix/errors.py":["p",{"AutoFixError":["6",[]],"ConvergenceError":["12",[]],"ToolNotFoundError":["18",[]],"ProjectDetectionError":["24",[]]}],"genesis/core/autofix/fixer.py":["p",{"AutoFixResult":["19",[]],"AutoFixer":["31",["__init__:44:(self, project_root:Optional[Path] = None, max_iterations:int = 5, stage_all_files:bool = True, run_validation:bool = True,)::","run:62:(self, dry_run:bool = False)>AutoFixResult:_log_summary,_stage_all_files:","run_stage_only:134:(self, stage_types:list[str], dry_run:bool = False)>AutoFixResult:_log_summary,run:","_stage_all_files:198:(self)>bool:run:","_log_summary:216:(self, result:AutoFixResult)>None::Log summary of autofix results.","get_available_tools:257:(self)>dict::"]]}],"genesis/core/autofix/stages.py":["p",{"StageResult":["26",[]],"Stage":["36",["__init__:39:(self, name:str, stage_type:StageType)::","get_commands:44:(self, project_info:ProjectInfo)>list[tuple[str, str]]::","run:57:(self, project_info:ProjectInfo, convergent_fixer:ConvergentFixer)>StageResult:get_commands:"]],"BasicFixesStage":["104",["__init__:107:(self):__init__:","get_commands:110:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"FormatterStage":["132",["__init__:135:(self, name:str):__init__:"]],"PythonFormatterStage":["139",["__init__:142:(self):__init__:","get_commands:145:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"NodeFormatterStage":["177",["__init__:180:(self):__init__:","get_commands:183:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"ConfigFormatterStage":["203",["__init__:206:(self):__init__:","get_commands:209:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"LinterStage":["239",["__init__:242:(self, name:str):__init__:"]],"PythonLinterStage":["246",["__init__:249:(self):__init__:","get_commands:252:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"NodeLinterStage":["268",["__init__:271:(self):__init__:","get_commands:274:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"ValidationStage":["287",["__init__:290:(self):__init__:","get_commands:293:(self, project_info:ProjectInfo)>list[tuple[str, str]]::"]],"StageOrchestrator":["304",["__init__:307:(self, stages:Optional[list[Stage]] = None):_get_default_stages:","_get_default_stages:315:(self)>list[Stage]::Get default stages for multi-stage processing.","run_all:329:(self, project_info:ProjectInfo, convergent_fixer:ConvergentFixer)>list[StageResult]:run:"]]}],"genesis/core/config.py":["p",["load_config:110:(file_path:Optional[Union[str, Path]] = None, env_prefix:str = \"\", defaults:Optional[dict[str, Any]] = None,)>dict[str, Any]:get,load,load_config:"],{"ConfigLoader":["12",["__init__:15:(self, env_prefix:str = \"\")::","load_file:24:(self, file_path:Union[str, Path])>dict[str, Any]::Load configuration from YAML file.","load_env:47:(self, config:dict[str, Any])>dict[str, Any]::Apply environment variable overrides to config.","load:74:(self, file_path:Optional[Union[str, Path]] = None, defaults:Optional[dict[str, Any]] = None,)>dict[str, Any]:load_env,load_file:","get:97:(self, key:str, default:Any = None)>Any:get:Get configuration value by key.","__getitem__:101:(self, key:str)>Any::Dictionary-style access to config values."]]}],"genesis/core/context/manager.py":["p",["get_context_manager:231:()>ContextManager::Get the global context manager instance.","get_context:243:()>Optional[RequestContext]:get_context_manager,get_current_context:Get the current request context.","set_context:248:(context:RequestContext)>None:get_context_manager,set_current_context:Set the current request context.","clear_context:253:()>None:clear_current_context,get_context_manager:Clear the current request context.","context_span:259:(context:RequestContext)>Generator[RequestContext, None, None]:context_scope,get_context_manager:Context manager for scoped context execution.","get_correlation_id:266:()>Optional[str]:get_context:Get current correlation ID.","set_correlation_id:274:(correlation_id:str)>None:get_context:Set current correlation ID.","get_request_id:283:()>Optional[str]:get_context:Get current request ID.","get_trace_id:291:()>Optional[str]:get_context:Get current trace ID.","get_user_id:299:()>Optional[str]:get_context:Get current user ID.","get_metadata:307:()>Dict[str, Any]:get_context:Get current metadata.","generate_correlation_id:316:()>str::Generate a new correlation ID.","generate_request_id:321:()>str::Generate a new request ID.","generate_trace_id:326:()>str::Generate a new trace ID.","generate_span_id:331:()>str::Generate a new span ID."],{"TraceContext":["30",["to_dict:38:(self)>Dict[str, Any]::Convert to dictionary for serialization.","create_child_span:47:(self)>\"TraceContext\":generate_span_id:Create a child span context."]],"RequestContext":["58",["to_dict:74:(self)>Dict[str, Any]:to_dict:Convert to dictionary for serialization.","get_logger_context:91:(self)>Dict[str, Any]::Get context data formatted for logger.","create_new:114:(cls, user_id:Optional[str] = None, metadata:Optional[Dict[str, Any]] = None,)>\"RequestContext\":generate_correlation_id,generate_request_id:Create a new request context with generated IDs.","with_trace:123:(self, trace_context:TraceContext)>\"RequestContext\"::Create a copy with trace context.","with_user:136:(self, user_id:str)>\"RequestContext\"::Create a copy with user ID."]],"ContextManager":["150",["__init__:157:(self, service_name:str = \"genesis\", environment:str = \"development\")::","get_current_context:161:(self)>Optional[RequestContext]::Get the current request context.","set_current_context:165:(self, context:RequestContext)>None::Set the current request context.","clear_current_context:178:(self)>None::Clear the current request context.","create_context:195:(self, correlation_id:Optional[str] = None, request_id:Optional[str] = None, user_id:Optional[str] = None, trace_context:Optional[TraceContext] = None, metadata:Optional[Dict[str, Any]] = None,)>RequestContext:generate_correlation_id,generate_request_id:Create a new request context.","context_scope:210:(self, context:RequestContext)>Generator[RequestContext, None, None]:clear_current_context,get_current_context,set_current_context:Context manager for scoped context execution."]]}],"genesis/core/errors/handler.py":["p",["get_error_handler:388:()>ErrorHandler::Get the global error handler instance.","handle_error:403:(error:Exception, context:Optional[ErrorContext] = None)>GenesisError:get_error_handler,handle:"],{"ErrorContext":["50",["to_dict:63:(self)>Dict[str, Any]::Convert context to dictionary for serialization.","create_default:80:(cls, service:Optional[str] = None, environment:Optional[str] = None)>\"ErrorContext\"::Create a default error context."]],"GenesisError":["92",["__init__:111:(self, message:str, code:str = \"GENESIS_ERROR\", category:ErrorCategory = ErrorCategory.UNKNOWN, severity:ErrorSeverity = ErrorSeverity.ERROR, context:Optional[ErrorContext] = None, cause:Optional[Exception] = None, details:Optional[Dict[str, Any]] = None, retry_after:Optional[int] = None, recoverable:bool = True,):__init__,_capture_stack_trace,_create_default_context:","_create_default_context:124:(self)>ErrorContext:create_default:Create default error context from environment.","_capture_stack_trace:133:(self)>List[str]::Capture current stack trace for debugging.","to_dict:137:(self)>Dict[str, Any]:to_dict:Convert error to dictionary for logging/serialization.","to_json:169:(self)>str:to_dict:Convert error to JSON string."]],"InfrastructureError":["175",["__init__:178:(self, message:str, **kwargs):__init__:"]],"NetworkError":["187",["__init__:190:(self, message:str, endpoint:Optional[str] = None, **kwargs):__init__:"]],"ValidationError":["200",["__init__:203:(self, message:str, field:Optional[str] = None, **kwargs):__init__:"]],"AuthenticationError":["217",["__init__:220:(self, message:str, **kwargs):__init__:"]],"AuthorizationError":["230",["__init__:233:(self, message:str, resource:Optional[str] = None, **kwargs):__init__:"]],"GenesisTimeoutError":["247",["__init__:252:(self, message:str, timeout_duration:Optional[float] = None, **kwargs):__init__:"]],"RateLimitError":["262",["__init__:265:(self, message:str, retry_after:Optional[int] = None, **kwargs):__init__:"]],"ExternalServiceError":["275",["__init__:278:(self, message:str, service_name:Optional[str] = None, **kwargs):__init__:"]],"ResourceError":["291",["__init__:294:(self, message:str, resource_type:Optional[str] = None, **kwargs):__init__:"]],"ErrorHandler":["304",["__init__:311:(self, service_name:str = \"genesis\", environment:str = \"development\")::","handle:318:(self, error:Exception, context:Optional[ErrorContext] = None)>GenesisError:_convert_to_genesis_error:","_convert_to_genesis_error:350:(self, error:Exception, context:Optional[ErrorContext] = None)>GenesisError:create_default:Convert standard exception to appropriate GenesisError subclass.","add_handler:379:(self, handler:Callable[[GenesisError], None])>None::Add a handler function to process errors."]]}],"genesis/core/health.py":["p",{"CheckResult":["22",[]],"HealthCheck":["33",["__init__:36:(self)::","add_check:39:(self, name:str, check_func:Callable[[], CheckResult])>None::","remove_check:48:(self, name:str)>None::Remove a health check by name.","run_check:52:(self, name:str)>CheckResult::Run a single health check by name.","run_all_checks:79:(self)>list[CheckResult]:run_check:Run all registered health checks.","get_overall_status:83:(self)>HealthStatus:run_all_checks:Get overall health status based on all checks.","get_summary:100:(self)>dict[str, Any]:get_overall_status,run_all_checks:Get health check summary."]]}],"genesis/core/logger.py":["p",["get_logger:63:(name:str, config:Optional[LogConfig] = None, handler:Optional[logging.Handler] = None,)>logging.Logger:get_logger:"],{"LogConfig":["14",[]],"JSONFormatter":["24",["__init__:27:(self, config:LogConfig):__init__:","format:31:(self, record:logging.LogRecord)>str::"]]}],"genesis/core/retry.py":["p",["retry:79:(config:Optional[RetryConfig] = None)>Callable:_async_retry_wrapper,_sync_retry_wrapper,async_function,decorator,retry,unreliable_function:","_sync_retry_wrapper:108:(func:Callable, config:RetryConfig)>Callable:wrapper:","_async_retry_wrapper:135:(func:Callable, config:RetryConfig)>Callable:wrapper:","circuit_breaker:460:(config:Optional[CircuitBreakerConfig] = None)>Callable::Circuit breaker decorator factory.","resilient_call:470:(retry_config:Optional[RetryConfig] = None, circuit_config:Optional[CircuitBreakerConfig] = None,)>Callable:database_call,decorator,external_api_call,resilient_call,retry:","resilient_external_service:511:(max_attempts:int = 3, failure_threshold:int = 5, timeout:float = 60.0, name:str = \"ExternalService\",)>Callable:resilient_call,retry:","resilient_database:544:(max_attempts:int = 2, failure_threshold:int = 3, timeout:float = 30.0, name:str = \"Database\",)>Callable:resilient_call,retry:"],{"RetryConfig":["68",[]],"CircuitBreakerError":["171",["__init__:174:(self, message:str, circuit_name:str = \"unknown\"):__init__:"]],"CircuitBreakerMetrics":["189",["success_rate:202:(self)>float::Calculate success rate as a percentage.","failure_rate:209:(self)>float::Calculate failure rate as a percentage."]],"CircuitBreakerConfig":["217",[]],"CircuitBreaker":["228",["__init__:239:(self, config:Optional[CircuitBreakerConfig] = None)::","state:267:(self)>CircuitBreakerState::Get current circuit breaker state.","metrics:273:(self)>CircuitBreakerMetrics:metrics:Get current metrics (thread-safe copy).","_should_attempt_reset:287:(self)>bool::Check if circuit should attempt to reset from OPEN to HALF_OPEN.","_transition_to_state:295:(self, new_state:CircuitBreakerState)>None::Transition to a new state.","_record_success:311:(self)>None:_transition_to_state:Record a successful call.","_record_failure:329:(self, exception:Exception)>None:_transition_to_state:Record a failed call.","_can_execute:355:(self)>bool:_should_attempt_reset,_transition_to_state:Check if a call can be executed.","call:375:(self, func:Callable[..., Any], *args, **kwargs)>Any:_can_execute,_record_failure,_record_success:Execute a function through the circuit breaker.","call_async:392:async (self, func:Callable[..., Any], *args, **kwargs)>Any:_can_execute,_record_failure,_record_success:Execute an async function through the circuit breaker.","decorator:409:(self, func:F)>F:async_wrapper,call,call_async,sync_wrapper:Decorator for wrapping functions with circuit breaker.","async_wrapper:414:async (*args, **kwargs):call_async:","sync_wrapper:421:(*args, **kwargs):call:","reset:426:(self)>None:_transition_to_state:Manually reset the circuit breaker to CLOSED state.","get_status:434:(self)>dict::Get detailed status information."]]}],"genesis/testing/ai_safety.py":["p",["count_files_in_directory:9:(directory:Path, include_hidden:bool = False, use_gitignore:bool = True)>int::Count files in directory, respecting gitignore patterns by default.","validate_ai_safety_limits:66:(directory:Path, max_files:int = 100, max_component_files:int = 30)>Dict[str, Any]:count_files_in_directory:Validate directory meets AI safety file count limits.","assert_file_count_safe:100:(directory:Path, max_files:int = 100, message:str = None):count_files_in_directory:Assert that directory has safe file count for AI.","assert_component_isolation:111:(component_path:Path, max_files:int = 30):count_files_in_directory:Assert that component meets isolation requirements.","get_file_count_report:129:(directory:Path)>Dict[str, Any]:count_files_in_directory,validate_ai_safety_limits:Generate detailed file count report for directory.","print_ai_safety_report:179:(directory:Path):get_file_count_report:Print human-readable AI safety report."],{"AISafetyChecker":["208",["__init__:211:(self, max_total_files:int = 100, max_component_files:int = 30)::","check_project:215:(self, project_path:Path)>Dict[str, Any]:validate_ai_safety_limits:Check entire project for AI safety.","check_component:221:(self, component_path:Path)>Dict[str, Any]:count_files_in_directory:Check single component for AI safety.","assert_project_safe:231:(self, project_path:Path):check_project:Assert project meets AI safety requirements.","assert_component_safe:239:(self, component_path:Path):check_component:Assert component meets AI safety requirements."]]}],"shared-typescript/sr/config.ts":["t",["loadConfig:152:(filePath?:string, envPrefix:string = '', defaults?:Record<string, any>):Record<string, any>::","createConfigLoader:164:(envPrefix:string = ''):ConfigLoader::"],{"GenesisConfigLoader":["17",["constructor:19:(private envPrefix:string = '')::","loadFile:23:(filePath:string):Record<string, any>::","loadEnv:60:(config:Record<string, any>):Record<string, any>::","load:84:(filePath?:string, defaults?:Record<string, any>):Record<string, any>::","getItem:118:(key:string):any::","has:123:(key:string):boolean::","getAll:128:():Readonly<Record<string, any>>::","__init__:19:(private envPrefix:string = '')::"]],"with":["169",["getAll:200:():Readonly<T>::","__init__:173:(filePath?:string, envPrefix:string = '', defaults?:Partial<T>)::"]],"TypedConfig":["171",["getAll:200:():Readonly<T>::","__init__:173:(filePath?:string, envPrefix:string = '', defaults?:Partial<T>)::"]]}],"shared-typescript/sr/context.ts":["t",["getContextManager:87:():ContextManager::","getContext:98:():RequestContext | undefined:getContextManager:","setContext:102:(context:RequestContext):void:getContextManager:","clearContext:106:():void:getContextManager:","contextSpan:110:async (context:RequestContext, fn:():getContextManager:","contextSpanSync:117:(context:RequestContext, fn:():getContextManager:","getCorrelationId:125:():string | undefined:getContext:","setCorrelationId:130:(correlationId:string):void:getContext:","getRequestId:137:():string | undefined:getContext:","getTraceId:142:():string | undefined:getContext:","getUserId:147:():string | undefined:getContext:","getMetadata:152:():Record<string, any>:getContext:","generateCorrelationId:158:():string::","generateRequestId:162:():string::","generateTraceId:166:():string::","generateSpanId:170:():string::","createRequestContext:175:(options:{ userId?:string; metadata?:Record<string, any>; service?:string; environment?:string; } = {}):RequestContext:generateCorrelationId,generateRequestId:","createTraceContext:192:(options:{ traceId?:string; parentSpanId?:string; baggage?:Record<string, string>; } = {}):TraceContext:generateSpanId,generateTraceId:","enrichContext:206:(context:RequestContext, updates:Partial<RequestContext>):RequestContext::","contextToDict:217:(context:RequestContext):Record<string, any>::","getLoggerContext:240:(context?:RequestContext):Record<string, any>:getContext:","addLoggerContextMethod:267:(context:RequestContext):RequestContext &:getLoggerContext:","createContextMiddleware:274:(options:{ generateCorrelationId?:boolean; extractUserId?:(req:any)::"],{"ContextManager":["32",["getCurrentContext:37:():RequestContext | undefined::","setCurrentContext:41:(context:RequestContext):void::","clearCurrentContext:47:():void::","__init__:33:(private serviceName:string = 'genesis', private environment:string = 'development')::"]]}],"shared-typescript/sr/errors.ts":["t",["createErrorContext:60:(service?:string, environment?:string):ErrorContext::","getErrorHandler:405:():ErrorHandler::","handleError:418:(error:Error, context?:ErrorContext):GenesisError:getErrorHandler:"],{"for":["73",["constructor:85:(options:GenesisErrorOptions)::","toJSON:115:():Record<string, any>::","toString:158:():string::","__init__:85:(options:GenesisErrorOptions)::"]],"GenesisError":["75",["constructor:85:(options:GenesisErrorOptions)::","toJSON:115:():Record<string, any>::","toString:158:():string::","__init__:85:(options:GenesisErrorOptions)::"]],"InfrastructureError":["167",["constructor:168:(message:string, options:Partial<GenesisErrorOptions> = {})::","__init__:168:(message:string, options:Partial<GenesisErrorOptions> = {})::"]],"NetworkError":["183",["constructor:184:(message:string, endpoint?:string, options:Partial<GenesisErrorOptions> = {})::","__init__:184:(message:string, endpoint?:string, options:Partial<GenesisErrorOptions> = {})::"]],"ValidationError":["205",["constructor:206:(message:string, field?:string, options:Partial<GenesisErrorOptions> = {})::","__init__:206:(message:string, field?:string, options:Partial<GenesisErrorOptions> = {})::"]],"AuthenticationError":["228",["constructor:229:(message:string, options:Partial<GenesisErrorOptions> = {})::","__init__:229:(message:string, options:Partial<GenesisErrorOptions> = {})::"]],"AuthorizationError":["245",["constructor:246:(message:string, resource?:string, options:Partial<GenesisErrorOptions> = {})::","__init__:246:(message:string, resource?:string, options:Partial<GenesisErrorOptions> = {})::"]],"TimeoutError":["268",["constructor:269:(message:string, timeoutDuration?:number, options:Partial<GenesisErrorOptions> = {})::","__init__:269:(message:string, timeoutDuration?:number, options:Partial<GenesisErrorOptions> = {})::"]],"RateLimitError":["290",["constructor:291:(message:string, retryAfter?:number, options:Partial<GenesisErrorOptions> = {})::","__init__:291:(message:string, retryAfter?:number, options:Partial<GenesisErrorOptions> = {})::"]],"ExternalServiceError":["307",["constructor:308:(message:string, serviceName?:string, options:Partial<GenesisErrorOptions> = {})::","__init__:308:(message:string, serviceName?:string, options:Partial<GenesisErrorOptions> = {})::"]],"ResourceError":["329",["constructor:330:(message:string, resourceType?:string, options:Partial<GenesisErrorOptions> = {})::","__init__:330:(message:string, resourceType?:string, options:Partial<GenesisErrorOptions> = {})::"]],"ErrorHandler":["351",["handle:358:(error:Error, context?:ErrorContext):GenesisError::","addHandler:396:(handler:(error:GenesisError) => void):void::","__init__:353:(private serviceName:string = 'genesis', private environment:string = 'development')::"]]}],"shared-typescript/sr/health.ts":["t",{"HealthCheck":["45",["addCheck:51:(name:string, checkFunc:HealthCheckFunction):void::","removeCheck:58:(name:string):void::","runCheck:65:async (name:string):Promise<CheckResult>::","runAllChecks:109:async ():Promise<CheckResult[]>::","getOverallStatus:120:async ():Promise<HealthStatus>::","getSummary:143:async ():Promise<HealthSummary>::","getCheckNames:169:():string[]::"]]}],"shared-typescript/sr/logger.ts":["t",["getLogger:151:(name:string, config:LogConfig = {}):Logger::","createChildLogger:170:(parent:Logger, name:string, extraFields:Record<string, any> = {}):Logger:getLogger:"],{"GenesisLogger":["39",["debug:126:(message:string, extra?:Record<string, any>):void::","info:130:(message:string, extra?:Record<string, any>):void::","warn:134:(message:string, extra?:Record<string, any>):void::","error:138:(message:string, extra?:Record<string, any>):void::","fatal:142:(message:string, extra?:Record<string, any>):void::","__init__:40:(private name:string, private config:Required<LogConfig>)::"]]}],"shared-typescript/sr/retry.ts":["t",["sleep:71:(ms:number):Promise<void>::","addJitter:78:(delay:number, jitter:boolean):number::","retry:86:(config:RetryConfig = {}):addJitter,sleep:","retryFunction:143:async (fn:()::","circuitBreaker:378:(config:CircuitBreakerConfig = {})::","resilientCall:402:(retryConfig:RetryConfig = {}, circuitConfig:CircuitBreakerConfig = {}):retryFunction:","resilientExternalService:431:(maxAttempts:number = 3, failureThreshold:number = 5, timeout:number = 60000, name:string = 'ExternalService'):resilientCall:","resilientDatabase:459:(maxAttempts:number = 2, failureThreshold:number = 3, timeout:number = 30000, name:string = 'Database'):resilientCall:"],{"CircuitBreakerError":["50",["constructor:52:(message:string, circuitName:string = 'unknown')::","__init__:52:(message:string, circuitName:string = 'unknown')::"]],"CircuitBreaker":["189",["constructor:196:(private config:Required<CircuitBreakerConfig>)::","getState:222:():CircuitBreakerState::","getMetrics:226:():CircuitBreakerMetrics::","reset:341:():void::","getStatus:348:():any::","__init__:196:(private config:Required<CircuitBreakerConfig>)::"]]}],"smart-commit/sr/smart-commit.sh":["s",["log:0:():error_exit:","error_exit:0:()::"]],"smart-commit/t/test_smart_commit.py":["p",{"TestSmartCommit":["11",["temp_git_repo:15:(self)::Create a temporary git repository for testing.","test_no_changes_to_commit:30:(self, temp_git_repo)::Test that script exits when no changes exist.","test_with_changes_but_no_precommit:42:(self, temp_git_repo)::Test smart-commit with changes but no pre-commit config.","test_secret_detection:68:(self, temp_git_repo)::Test that script detects potential secrets.","test_with_precommit_config:83:(self, temp_git_repo)::Test smart-commit with pre-commit configuration."]]}],"terraform/t/validate.sh":["s",["test_module:0:()::Test function"]],"testing/fixtures/mock_commands.py":["p",["create_mock_shell_commands:81:()>MockCommandRunner:configure_command:Create mock command runner with common shell commands configured.","create_genesis_script_mocks:113:()>MockCommandRunner:configure_command:Create mock command runner configured for Genesis scripts.","patch_subprocess_run:176:():create_mock_shell_commands:Simple patch for subprocess.run with default success."],{"MockCommandRunner":["8",["__init__:11:(self)::","configure_command:23:(self, command:str, returncode:int = 0, stdout:str = \"\", stderr:str = \"\", side_effect:Optional[Exception] = None,)::Configure response for a specific command.","mock_run:32:(self, cmd:Union[str, List[str]], **kwargs)::Mock subprocess.run with configurable responses.","was_called:62:(self, command_pattern:str)>bool::Check if a command matching pattern was called.","get_calls_matching:66:(self, command_pattern:str)>List[Dict[str, Any]]::Get all calls matching a command pattern.","get_call_count:72:(self, command_pattern:str)>int:get_calls_matching:Get count of calls matching pattern.","clear_history:76:(self)::Clear call history."]],"MockScriptEnvironment":["149",["__init__:152:(self):create_genesis_script_mocks:","set_env_var:157:(self, name:str, value:str)::Set environment variable.","set_working_dir:161:(self, path:str)::Set working directory.","run_script:165:(self, script_path:str, args:List[str] = None):mock_run:Mock running a script.","patch_all:171:(self)::Return context manager that patches subprocess and environment."]]}],"testing/fixtures/mock_filesystem.py":["p",["create_genesis_project_structure:90:(base_path:Path)>MockFilesystem:create_structure:Create a mock Genesis project structure.","create_test_project:148:(name:str = \"test-project\", project_type:str = \"python-api\")>MockFilesystem:create_structure:Create a test project structure."],{"MockFilesystem":["10",["__init__:13:(self, base_path:Optional[Path] = None)::","create_file:24:(self, relative_path:str, content:str = \"\")>Path::Create a file with given content.","create_directory:32:(self, relative_path:str)>Path::Create a directory.","create_structure:39:(self, structure:Dict[str, Any])>None:_create_structure_recursive:","_create_structure_recursive:57:(self, structure:Dict[str, Any], base:Path)>None:_create_structure_recursive,create_directory,create_file:Recursively create structure.","count_files:70:(self, pattern:str = \"*\")>int::Count files matching pattern.","list_files:74:(self, pattern:str = \"*\")>List[Path]::List files matching pattern.","cleanup:78:(self)>None::Clean up temporary directory if created.","__enter__:83:(self)::","__exit__:86:(self, exc_type, exc_val, exc_tb):cleanup:"]]}],"testing/fixtures/mock_git.py":["p",["create_mock_git:55:()>MockGit:configure_command:Create a configured mock git instance.","patch_git_operations:76:():create_mock_git:Decorator/context manager to patch git operations."],{"MockGit":["8",["__init__:11:(self)::","configure_command:17:(self, command:str, returncode:int = 0, stdout:str = \"\", stderr:str = \"\")::Configure response for a specific git command.","mock_run:25:(self, cmd, **kwargs)::Mock subprocess.run for git commands.","get_call_history:46:(self)::Get history of all git command calls.","was_called_with:50:(self, command:str)>bool::Check if a specific command was called."]]}],"testing/t/test_ai_safety.py":["p",{"TestAISafetyValidation":["17",["test_validate_file_limits_safe_project:20:(self, temp_dir)::Test validation of a safe project.","test_validate_file_limits_unsafe_project:31:(self, temp_dir)::Test validation of project exceeding limits.","test_component_isolation_validation:42:(self, temp_dir)::Test component isolation validation.","test_ai_safety_checker_class:57:(self, temp_dir)::Test AISafetyChecker class functionality.","test_file_count_safe_assertion:72:(self, temp_dir)::Test file count safety assertion.","test_genesis_project_ai_safety:86:(self, genesis_root)::Test that actual Genesis project meets AI safety limits.","test_exclude_patterns_working:119:(self, temp_dir)::Test that file counting excludes appropriate patterns.","test_component_structure_requirements:139:(self, temp_dir)::Test that components have required structure."]],"TestFileCountReporting":["157",["test_file_count_report_generation:160:(self, temp_dir)::Test generation of detailed file count reports.","test_print_ai_safety_report:189:(self, temp_dir, capsys)::Test printing of AI safety report."]]}],"testing/t/test_integration.py":["p",{"TestComponentIntegration":["15",["test_bootstrap_to_worktree_workflow:19:(self, temp_dir)::Test workflow: bootstrap project -> create worktree.","test_cli_status_with_all_components:62:(self, temp_dir)::Test CLI status command with all components present.","test_smart_commit_integration:95:(self, temp_dir)::Test smart commit integration with CLI.","test_shared_python_utilities_integration:120:(self, temp_dir)::Test that shared Python utilities work together.","test_component_script_discovery:144:(self, temp_dir)::Test that CLI can discover all component scripts."]],"TestEndToEndWorkflows":["165",["test_complete_development_workflow:169:(self, temp_dir)::Test complete workflow: bootstrap -> develop -> commit.","test_ai_safety_throughout_workflow:217:(self, temp_dir)::Test that AI safety is maintained throughout workflow."]],"TestErrorHandlingIntegration":["253",["test_cli_error_propagation:257:(self, temp_dir)::Test that errors from scripts propagate correctly through CLI.","test_missing_component_handling:285:(self, temp_dir)::Test handling of missing components.","test_invalid_project_detection:309:(self)::Test detection and handling of invalid project structures."]]}],"t/test_autofix.py":["p",{"TestProjectDetector":["26",["test_detect_python_poetry_project:29:(self, tmp_path)::Test detection of Poetry Python project."]],"TestConvergentFixer":["82",["test_convergent_fixing_success:85:(self)::Test successful convergent fixing.","test_convergent_fixing_multiple_runs:106:(self)::Test convergent fixing that requires multiple runs.","test_convergent_fixing_failure:127:(self)::Test convergent fixing that doesn't converge.","test_dry_run_mode:147:(self)::Test dry run mode.","test_git_command_failure:156:(self)::Test handling of git command failure."]],"TestStages":["167",["test_basic_fixes_stage_with_precommit:170:(self)::Test basic fixes stage with pre-commit available.","test_python_formatter_stage_poetry:189:(self)::Test Python formatter stage with Poetry.","test_node_formatter_stage:212:(self)::Test Node.js formatter stage.","test_stage_with_wrong_project_type:229:(self)::Test stage with incompatible project type."]],"TestAutoFixer":["242",["test_autofixer_initialization:245:(self, tmp_path)::Test AutoFixer initialization.","test_autofixer_run_success:256:(self, mock_orchestrator, mock_detector, tmp_path)::Test successful AutoFixer run.","test_autofixer_dry_run:285:(self, tmp_path)::Test AutoFixer dry run mode.","test_autofixer_run_stage_only:312:(self, tmp_path)::Test running only specific stages.","test_autofixer_error_handling:326:(self, tmp_path)::Test AutoFixer error handling.","test_get_available_tools:338:(self, tmp_path)::Test getting available tools information."]],"TestIntegration":["362",["test_end_to_end_python_project:365:(self, tmp_path)::Test end-to-end autofix on a Python project."]]}],"t/test_circuit_breaker.py":["p",{"TestCircuitBreakerConfig":["24",["test_default_config:27:(self)::Test default configuration values.","test_custom_config:37:(self)::Test custom configuration values."]],"TestCircuitBreakerMetrics":["55",["test_empty_metrics:58:(self)::Test metrics with no requests.","test_success_rate_calculation:64:(self)::Test success rate calculation.","test_all_successful:72:(self)::Test metrics with all successful requests.","test_all_failed:80:(self)::Test metrics with all failed requests."]],"TestCircuitBreakerError":["89",["test_default_error:92:(self)::Test default error creation.","test_error_with_circuit_name:99:(self)::Test error with circuit name."]],"TestCircuitBreaker":["107",["test_initial_state:110:(self)::Test circuit breaker starts in CLOSED state.","test_successful_call:116:(self):successful_function:Test successful function call.","successful_function:216:()::","test_failed_call:129:(self):failing_function:Test failed function call.","failing_function:304:()::","test_circuit_opens_after_failures:145:(self):failing_function:Test circuit opens after failure threshold is reached.","test_circuit_rejects_calls_when_open:164:(self):failing_function:Test circuit rejects calls when open.","test_circuit_half_open_after_timeout:182:(self):failing_function,successful_function:Test circuit transitions to HALF_OPEN after timeout.","test_circuit_closes_after_success_in_half_open:206:(self):failing_function,successful_function:Test circuit closes after successful calls in HALF_OPEN state.","test_circuit_reopens_on_failure_in_half_open:247:(self):failing_function:Test circuit reopens on failure while in HALF_OPEN state.","test_half_open_call_limit:269:(self):slow_function:Test HALF_OPEN state respects call limit.","slow_function:279:()::","test_reset_functionality:299:(self):failing_function:Test manual reset functionality.","test_get_status:317:(self)::Test status information retrieval.","test_thread_safety:328:(self):worker_failing,worker_successful:Test thread safety of circuit breaker.","worker_successful:334:()::","worker_failing:341:()::","test_async_calls:368:async (self):async_failing,async_successful:Test async function calls.","async_successful:372:async ()::","async_failing:375:async ()::"]],"TestCircuitBreakerDecorator":["387",["test_decorator_sync_function:390:(self):test_function:Test decorator with synchronous function.","test_function:443:()::","test_decorator_async_function:416:async (self):async_test_function:Test decorator with asynchronous function.","async_test_function:422:async (value)::","test_factory_decorator:438:(self):test_function:Test circuit_breaker factory decorator."]],"TestResilientIntegration":["455",["test_resilient_call_decorator:458:(self):test_function:Test resilient_call decorator combining retry and circuit breaker.","test_function:468:()::","test_resilient_external_service:490:(self):external_api:Test resilient_external_service convenience decorator.","external_api:495:()::","test_resilient_database:512:(self):database_query:Test resilient_database convenience decorator.","database_query:517:()::","test_resilient_call_async:535:async (self):async_function:Test resilient_call with async functions.","async_function:543:async ()::"]],"TestEdgeCases":["561",["test_zero_failure_threshold:564:(self):failing_function:Test behavior with zero failure threshold.","failing_function:569:()::","test_very_short_timeout:579:(self)::Test behavior with very short timeout.","test_large_sliding_window:595:(self)::Test behavior with large sliding window.","test_metrics_thread_safety:616:(self):worker:Test that metrics are thread-safe.","worker:620:()::"]]}],"t/test_context_management.py":["p",["clear_context_before_test:27:()::Ensure clean context state before each test."],{"TestTraceContext":["34",["test_trace_context_creation:37:(self)::Test creating trace context.","test_trace_context_to_dict:51:(self)::Test trace context serialization.","test_create_child_span:62:(self)::Test creating child span from trace context."]],"TestRequestContext":["76",["test_request_context_creation:79:(self)::Test creating request context.","test_request_context_to_dict:96:(self)::Test request context serialization.","test_request_context_logger_context:116:(self)::Test request context logger formatting.","test_create_new_context:137:(self)::Test creating new request context with generated IDs.","test_context_with_trace:150:(self)::Test adding trace context to request context.","test_context_with_user:161:(self)::Test adding user to request context."]],"TestContextManager":["172",["test_context_manager_creation:175:(self)::Test creating context manager.","test_get_set_clear_context:182:(self)::Test basic context operations.","test_create_context:199:(self)::Test creating context through manager.","test_context_scope:213:(self)::Test context scope manager.","test_context_scope_nesting:230:(self)::Test nested context scopes."]],"TestConvenienceFunctions":["254",["test_global_context_functions:257:(self)::Test global get/set/clear context functions.","test_context_span_function:274:(self)::Test context_span convenience function.","test_correlation_id_functions:286:(self)::Test correlation ID convenience functions."]],"TestIDGeneration":["304",["test_generate_correlation_id:307:(self)::Test correlation ID generation.","test_generate_request_id:319:(self)::Test request ID generation."]],"TestThreadSafety":["332",["test_context_isolation_between_threads:335:(self):thread_function:Test that contexts are isolated between threads.","thread_function:370:(thread_id:str)::","test_correlation_id_thread_safety:366:(self):thread_function:Test correlation ID thread safety."]],"TestAsyncSupport":["389",["test_async_context_isolation:393:async (self):async_function:Test that contexts work properly with async/await.","async_function:396:async (user_id:str)>str::","test_async_context_span:422:async (self)::Test context span with async operations."]],"TestContextIntegration":["437",["test_context_with_error_framework_integration:440:(self)::Test that context can be used with error framework.","test_context_metadata_handling:462:(self)::Test context metadata functionality."]]}],"t/test_error_framework.py":["p",{"TestErrorContext":["29",["test_create_default_context:32:(self)::Test creating default error context.","test_context_to_dict:44:(self)::Test error context serialization.","test_context_with_metadata:55:(self)::Test error context with metadata."]],"TestGenesisError":["68",["test_basic_genesis_error:71:(self)::Test basic GenesisError creation.","test_genesis_error_with_all_params:83:(self)::Test GenesisError with all parameters.","test_genesis_error_serialization:111:(self)::Test GenesisError to_dict serialization.","test_genesis_error_json_serialization:127:(self)::Test GenesisError JSON serialization.","test_stack_trace_inclusion:136:(self)::Test stack trace inclusion based on severity."]],"TestSpecificErrorTypes":["149",["test_infrastructure_error:152:(self)::Test InfrastructureError.","test_network_error:160:(self)::Test NetworkError with endpoint.","test_validation_error:168:(self)::Test ValidationError with field.","test_authentication_error:177:(self)::Test AuthenticationError.","test_authorization_error:185:(self)::Test AuthorizationError with resource.","test_timeout_error:194:(self)::Test GenesisTimeoutError with duration.","test_rate_limit_error:202:(self)::Test RateLimitError with retry_after.","test_external_service_error:210:(self)::Test ExternalServiceError with service name.","test_resource_error:220:(self)::Test ResourceError with resource type."]],"TestErrorHandler":["229",["test_handle_genesis_error:232:(self)::Test handling existing GenesisError.","test_handle_standard_exception:242:(self)::Test converting standard exceptions to GenesisError.","test_handle_connection_error:254:(self)::Test NetworkError conversion from ConnectionError.","test_handle_timeout_error:265:(self)::Test GenesisTimeoutError conversion.","test_handle_permission_error:276:(self)::Test AuthorizationError conversion from PermissionError.","test_handle_file_not_found_error:287:(self)::Test ResourceError conversion from FileNotFoundError.","test_handle_unknown_error:298:(self)::Test handling unknown error types.","test_error_handler_with_context:309:(self)::Test error handling with provided context.","test_error_handler_callbacks:321:(self):error_callback:Test error handler callbacks.","error_callback:327:(error:GenesisError)::"]],"TestErrorHandlingConvenience":["341",["test_handle_error_function:344:(self)::Test global handle_error function.","test_handle_error_with_context:352:(self)::Test handle_error with context.","test_global_error_handler_singleton:361:(self)::Test that get_error_handler returns singleton."]],"TestErrorCategoriesAndSeverities":["369",["test_all_error_categories:372:(self)::Test all error categories are defined.","test_all_error_severities:396:(self)::Test all error severities are defined.","test_error_hierarchy:404:(self)::Test that all custom errors inherit from GenesisError."]]}],"worktree-tools/sr/create-sparse-worktree.sh":["s",["show_usage:0:()::"]],"worktree-tools/t/test_sparse_worktree.py":["p",{"TestSparseWorktreeCreator":["12",["temp_git_repo:16:(self)::Create a temporary git repository for testing.","test_script_exists_and_executable:44:(self)::Test that the sparse worktree script exists and is executable.","test_help_flag_works:51:(self)::Test that --help flag shows usage information.","test_insufficient_arguments_shows_usage:65:(self)::Test that insufficient arguments shows usage and exits with error.","test_nonexistent_focus_path_fails:76:(self, temp_git_repo)::Test that script fails when focus path doesn't exist.","test_basic_worktree_creation_with_file:89:(self, temp_git_repo)::Test basic worktree creation focusing on a single file.","test_basic_worktree_creation_with_directory:119:(self, temp_git_repo)::Test basic worktree creation focusing on a directory.","test_max_files_option:143:(self, temp_git_repo)::Test --max-files option works correctly.","test_verify_option:166:(self, temp_git_repo)::Test --verify option performs safety checks.","test_invalid_max_files_value:189:(self, temp_git_repo)::Test that invalid max-files values are rejected.","test_unknown_option_fails:210:(self, temp_git_repo)::Test that unknown options cause script to fail with usage.","test_script_syntax_validation:225:(self)::Test that the script has valid bash syntax.","test_line_count_meets_requirement:235:(self)::Test that script meets the ~150 line requirement.","test_ai_safety_features_documented:245:(self)::Test that AI safety features are documented in the script.","test_color_output_functions:261:(self)::Test that color output is properly configured."]]}]},"g":[["ContextManager.context_scope","clear_current_context"],["LinterStage.__init__","ConvergentFixer.__init__"],["ExternalServiceError.__init__","TimeoutError.__init__"],["AuthenticationError.__init__","ExternalServiceError.__init__"],["CircuitBreaker._record_failure","CircuitBreaker._transition_to_state"],["InfrastructureError.__init__","AISafetyChecker.__init__"],["BasicFixesStage.__init__","TimeoutError.__init__"],["RateLimitError.__init__","MockGit.__init__"],["AutoFixer.run_stage_only","AutoFixer.run"],["GenesisTimeoutError.__init__","JSONFormatter.__init__"],["ExternalServiceError.__init__","ErrorHandler.__init__"],["NodeLinterStage.__init__","PythonLinterStage.__init__"],["resilient_external_service","retry"],["BasicFixesStage.__init__","ErrorHandler.__init__"],["ProjectDetector.detect","_detect_available_tools"],["GenesisError.__init__","ValidationError.__init__"],["ExternalServiceError.__init__","GenesisError.__init__"],["get_logger","get_logger"],["BasicFixesStage.__init__","GenesisError.__init__"],["RateLimitError.__init__","with.__init__"],["CircuitBreakerError.__init__","BasicFixesStage.__init__"],["RequestContext.to_dict","TraceContext.to_dict"],["GenesisTimeoutError.__init__","NodeLinterStage.__init__"],["AISafetyChecker.assert_project_safe","check_project"],["PythonLinterStage.__init__","AuthenticationError.__init__"],["PythonFormatterStage.__init__","LinterStage.__init__"],["NetworkError.__init__","ConfigFormatterStage.__init__"],["AuthenticationError.__init__","PythonFormatterStage.__init__"],["ValidationStage.__init__","MockGit.__init__"],["NodeFormatterStage.__init__","CircuitBreakerError.__init__"],["ExternalServiceError.__init__","GenesisConfigLoader.__init__"],["ProjectDetector._detect_available_tools","ProjectDetector._has_npm_bin"],["JSONFormatter.__init__","Stage.__init__"],["NetworkError.__init__","GenesisTimeoutError.__init__"],["ConfigFormatterStage.__init__","JSONFormatter.__init__"],["StageOrchestrator.run_all","Stage.run"],["GenesisTimeoutError.__init__","StageOrchestrator.__init__"],["CircuitBreakerError.__init__","JSONFormatter.__init__"],["FormatterStage.__init__","ConvergentFixer.__init__"],["InfrastructureError.__init__","MockGit.__init__"],["NetworkError.__init__","Stage.__init__"],["TestCircuitBreaker.test_async_calls","TestCircuitBreaker.async_failing"],["PythonFormatterStage.__init__","TimeoutError.__init__"],["ExternalServiceError.__init__","with.__init__"],["NodeLinterStage.__init__","ProjectDetector.__init__"],["BasicFixesStage.__init__","with.__init__"],["ValidationStage.__init__","PythonLinterStage.__init__"],["PythonFormatterStage.__init__","ErrorHandler.__init__"],["ValidationStage.__init__","InfrastructureError.__init__"],["AuthenticationError.__init__","NodeLinterStage.__init__"],["GenesisError.to_dict","to_dict"],["RateLimitError.__init__","for.__init__"],["LinterStage.__init__","BasicFixesStage.__init__"],["ValidationStage.__init__","MockCommandRunner.__init__"],["GenesisTimeoutError.__init__","ValidationError.__init__"],["PythonFormatterStage.__init__","GenesisError.__init__"],["InfrastructureError.__init__","PythonLinterStage.__init__"],["getUserId","getContext"],["print_ai_safety_report","get_file_count_report"],["JSONFormatter.__init__","__init__"],["CircuitBreaker.decorator","sync_wrapper"],["RateLimitError.__init__","NetworkError.__init__"],["InfrastructureError.__init__","MockCommandRunner.__init__"],["ConfigFormatterStage.__init__","StageOrchestrator.__init__"],["GenesisTimeoutError.__init__","TypedConfig.__init__"],["MockFilesystem._create_structure_recursive","_create_structure_recursive"],["CircuitBreakerError.__init__","StageOrchestrator.__init__"],["NetworkError.__init__","__init__"],["AuthenticationError.__init__","AuthenticationError.__init__"],["ai_safety_validator","MockFilesystem.__init__"],["TestResilientIntegration.test_resilient_call_async","TestResilientIntegration.async_function"],["LinterStage.__init__","JSONFormatter.__init__"],["NetworkError.__init__","FormatterStage.__init__"],["GenesisError.to_json","ErrorContext.to_dict"],["resilientCall","retryFunction"],["ExternalServiceError.__init__","for.__init__"],["GenesisError.__init__","MockFilesystem.__init__"],["CircuitBreaker.call","_record_failure"],["BasicFixesStage.__init__","for.__init__"],["ValidationStage.__init__","ProjectDetector.__init__"],["ai_safety_validator","AISafetyChecker.__init__"],["AutoFixer.run","AutoFixer._stage_all_files"],["AuthorizationError.__init__","BasicFixesStage.__init__"],["PythonFormatterStage.__init__","with.__init__"],["TestCircuitBreaker.test_circuit_reopens_on_failure_in_half_open","TestEdgeCases.failing_function"],["GenesisError.__init__","AISafetyChecker.__init__"],["cli","find_genesis_root"],["ai_safety_validator","TimeoutError.__init__"],["FormatterStage.__init__","BasicFixesStage.__init__"],["HealthCheck.get_summary","run_all_checks"],["ExternalServiceError.__init__","NetworkError.__init__"],["NodeLinterStage.__init__","ConfigFormatterStage.__init__"],["InfrastructureError.__init__","ProjectDetector.__init__"],["BasicFixesStage.__init__","NetworkError.__init__"],["TestThreadSafety.test_context_isolation_between_threads","thread_function"],["ValidationStage.__init__","ResourceError.__init__"],["PythonLinterStage.__init__","CircuitBreaker.__init__"],["ConfigFormatterStage.__init__","TypedConfig.__init__"],["PythonLinterStage.__init__","LinterStage.__init__"],["ProjectDetector._detect_available_tools","ProjectDetector._command_exists"],["CircuitBreakerError.__init__","TypedConfig.__init__"],["NodeLinterStage.__init__","GenesisTimeoutError.__init__"],["ValidationStage.__init__","AuthorizationError.__init__"],["resilientDatabase","resilientCall"],["LinterStage.__init__","StageOrchestrator.__init__"],["RateLimitError.__init__","ConfigFormatterStage.__init__"],["TestCircuitBreaker.test_thread_safety","TestCircuitBreaker.worker_successful"],["load_config","load_config"],["NodeLinterStage.__init__","Stage.__init__"],["NodeFormatterStage.__init__","ValidationStage.__init__"],["InfrastructureError.__init__","ResourceError.__init__"],["ResourceError.__init__","CircuitBreaker.__init__"],["ResourceError.__init__","LinterStage.__init__"],["RateLimitError.__init__","GenesisTimeoutError.__init__"],["ai_safety_validator","MockGit.__init__"],["GenesisTimeoutError.__init__","MockFilesystem.__init__"],["PythonLinterStage.__init__","TimeoutError.__init__"],["CircuitBreaker.sync_wrapper","CircuitBreaker.call"],["PythonFormatterStage.__init__","for.__init__"],["AutoFixer.run","_stage_all_files"],["GenesisError.__init__","MockGit.__init__"],["set_context","ContextManager.set_current_context"],["PythonLinterStage.__init__","ErrorHandler.__init__"],["AuthorizationError.__init__","AuthenticationError.__init__"],["ResourceError.__init__","AutoFixer.__init__"],["ConfigFormatterStage.__init__","HealthCheck.__init__"],["PythonLinterStage.__init__","GenesisError.__init__"],["ai_safety_validator","with.__init__"],["ExternalServiceError.__init__","ConfigFormatterStage.__init__"],["CircuitBreakerError.__init__","HealthCheck.__init__"],["PythonFormatterStage.__init__","NetworkError.__init__"],["StageOrchestrator.run_all","AutoFixer.run"],["BasicFixesStage.__init__","ConfigFormatterStage.__init__"],["CircuitBreakerError.__init__","CircuitBreaker.__init__"],["resilient_external_service","resilient_call"],["LinterStage.__init__","TypedConfig.__init__"],["JSONFormatter.__init__","ExternalServiceError.__init__"],["NodeLinterStage.__init__","__init__"],["retry","TestResilientIntegration.async_function"],["NodeLinterStage.__init__","FormatterStage.__init__"],["ResourceError.__init__","ErrorHandler.__init__"],["CircuitBreaker.metrics","metrics"],["ProjectDetector.detect","ProjectDetector._detect_python_subtype"],["ExternalServiceError.__init__","GenesisTimeoutError.__init__"],["retry","decorator"],["TestCircuitBreaker.test_circuit_opens_after_failures","failing_function"],["TestThreadSafety.test_correlation_id_thread_safety","thread_function"],["BasicFixesStage.__init__","GenesisTimeoutError.__init__"],["GenesisError.__init__","PythonLinterStage.__init__"],["ValidationStage.__init__","Stage.__init__"],["AuthenticationError.__init__","MockFilesystem.__init__"],["ResourceError.__init__","GenesisError.__init__"],["CircuitBreakerError.__init__","AutoFixer.__init__"],["PythonLinterStage.__init__","GenesisConfigLoader.__init__"],["TestCircuitBreaker.test_circuit_rejects_calls_when_open","failing_function"],["CircuitBreaker.call_async","_record_failure"],["GenesisError.__init__","MockCommandRunner.__init__"],["TestEdgeCases.test_metrics_thread_safety","worker"],["RateLimitError.__init__","FormatterStage.__init__"],["AuthenticationError.__init__","AISafetyChecker.__init__"],["InfrastructureError.__init__","Stage.__init__"],["JSONFormatter.__init__","PythonFormatterStage.__init__"],["PythonLinterStage.__init__","with.__init__"],["TestCircuitBreakerDecorator.test_decorator_sync_function","TestResilientIntegration.test_function"],["ResourceError.__init__","GenesisConfigLoader.__init__"],["AuthenticationError.__init__","TimeoutError.__init__"],["LinterStage.__init__","HealthCheck.__init__"],["TestCircuitBreaker.test_circuit_reopens_on_failure_in_half_open","TestCircuitBreaker.failing_function"],["NetworkError.__init__","BasicFixesStage.__init__"],["PythonFormatterStage.__init__","ConfigFormatterStage.__init__"],["ValidationStage.__init__","__init__"],["TestThreadSafety.test_context_isolation_between_threads","TestThreadSafety.thread_function"],["GenesisError.__init__","ProjectDetector.__init__"],["NodeFormatterStage.__init__","JSONFormatter.__init__"],["ai_safety_validator","NetworkError.__init__"],["ExternalServiceError.__init__","FormatterStage.__init__"],["LinterStage.__init__","AutoFixer.__init__"],["PythonFormatterStage.__init__","GenesisTimeoutError.__init__"],["BasicFixesStage.__init__","FormatterStage.__init__"],["GenesisTimeoutError.__init__","PythonLinterStage.__init__"],["CircuitBreakerError.__init__","GenesisConfigLoader.__init__"],["ConfigFormatterStage.__init__","ContextManager.__init__"],["capture_subprocess","mock_run"],["GenesisTimeoutError.__init__","InfrastructureError.__init__"],["InfrastructureError.__init__","__init__"],["CircuitBreakerError.__init__","ContextManager.__init__"],["GenesisTimeoutError.__init__","MockCommandRunner.__init__"],["ProjectDetector.detect","ProjectDetector._has_precommit"],["HealthCheck.get_summary","HealthCheck.get_overall_status"],["AuthenticationError.__init__","MockGit.__init__"],["CircuitBreaker.decorator","CircuitBreaker.async_wrapper"],["PythonLinterStage.__init__","for.__init__"],["GenesisError.__init__","ResourceError.__init__"],["GenesisTimeoutError.__init__","MockScriptEnvironment.__init__"],["NodeFormatterStage.__init__","NodeLinterStage.__init__"],["TestCircuitBreaker.test_async_calls","async_failing"],["AuthorizationError.__init__","CircuitBreaker.__init__"],["RateLimitError.__init__","ConvergentFixer.__init__"],["AuthorizationError.__init__","LinterStage.__init__"],["TestAsyncSupport.test_async_context_isolation","TestResilientIntegration.async_function"],["ConfigFormatterStage.__init__","RateLimitError.__init__"],["ValidationError.__init__","JSONFormatter.__init__"],["ContextManager.context_scope","ContextManager.get_current_context"],["MockFilesystem._create_structure_recursive","create_file"],["JSONFormatter.__init__","AuthenticationError.__init__"],["CircuitBreakerError.__init__","RateLimitError.__init__"],["FormatterStage.__init__","CircuitBreaker.__init__"],["AuthenticationError.__init__","with.__init__"],["FormatterStage.__init__","LinterStage.__init__"],["ConfigLoader.load","load_env"],["PythonLinterStage.__init__","NetworkError.__init__"],["NodeFormatterStage.__init__","StageOrchestrator.__init__"],["ResourceError.__init__","for.__init__"],["NetworkError.__init__","AuthenticationError.__init__"],["resilient_call","database_call"],["AuthenticationError.__init__","PythonLinterStage.__init__"],["AuthorizationError.__init__","AutoFixer.__init__"],["ProjectDetector._detect_available_tools","ProjectDetector._get_poetry_dev_tools"],["GenesisTimeoutError.__init__","ProjectDetector.__init__"],["ConfigFormatterStage.__init__","InfrastructureError.__init__"],["FormatterStage.__init__","AutoFixer.__init__"],["ai_safety_validator","ConfigFormatterStage.__init__"],["AuthorizationError.__init__","TimeoutError.__init__"],["ResourceError.__init__","NodeFormatterStage.__init__"],["ConfigFormatterStage.__init__","MockCommandRunner.__init__"],["CircuitBreakerError.__init__","InfrastructureError.__init__"],["PythonFormatterStage.__init__","FormatterStage.__init__"],["LinterStage.__init__","ContextManager.__init__"],["TestThreadSafety.test_correlation_id_thread_safety","TestThreadSafety.thread_function"],["create_test_project","MockFilesystem.create_structure"],["TestCircuitBreaker.test_successful_call","TestCircuitBreaker.successful_function"],["ExternalServiceError.__init__","ConvergentFixer.__init__"],["AuthorizationError.__init__","ErrorHandler.__init__"],["ConfigFormatterStage.__init__","MockScriptEnvironment.__init__"],["NodeFormatterStage.__init__","ValidationError.__init__"],["BasicFixesStage.__init__","ConvergentFixer.__init__"],["ai_safety_validator","GenesisTimeoutError.__init__"],["CircuitBreakerError.__init__","MockScriptEnvironment.__init__"],["AuthorizationError.__init__","GenesisError.__init__"],["CircuitBreaker.reset","CircuitBreaker._transition_to_state"],["FormatterStage.__init__","ErrorHandler.__init__"],["TestCircuitBreaker.test_circuit_closes_after_success_in_half_open","failing_function"],["GenesisTimeoutError.__init__","ResourceError.__init__"],["ValidationError.__init__","StageOrchestrator.__init__"],["CircuitBreaker._record_success","_transition_to_state"],["FormatterStage.__init__","GenesisError.__init__"],["NodeLinterStage.__init__","BasicFixesStage.__init__"],["CircuitBreakerError.__init__","NodeFormatterStage.__init__"],["LinterStage.__init__","RateLimitError.__init__"],["ConfigFormatterStage.__init__","ConfigLoader.__init__"],["GenesisTimeoutError.__init__","AuthorizationError.__init__"],["NodeFormatterStage.__init__","TypedConfig.__init__"],["GenesisError.__init__","Stage.__init__"],["CircuitBreakerError.__init__","ConfigLoader.__init__"],["get_metadata","get_context"],["TestResilientIntegration.test_resilient_call_async","async_function"],["AuthenticationError.__init__","ProjectDetector.__init__"],["ValidationStage.__init__","ExternalServiceError.__init__"],["retry","addJitter"],["PythonLinterStage.__init__","ConfigFormatterStage.__init__"],["TestCircuitBreaker.test_reset_functionality","failing_function"],["AuthorizationError.__init__","GenesisConfigLoader.__init__"],["log","error_exit"],["load_config","ConfigLoader.load"],["RateLimitError.__init__","BasicFixesStage.__init__"],["ValidationError.__init__","ValidationError.__init__"],["createTraceContext","generateTraceId"],["AISafetyChecker.check_project","validate_ai_safety_limits"],["AuthenticationError.__init__","NetworkError.__init__"],["FormatterStage.__init__","GenesisConfigLoader.__init__"],["LinterStage.__init__","InfrastructureError.__init__"],["MockFilesystem.create_structure","MockFilesystem._create_structure_recursive"],["PythonLinterStage.__init__","GenesisTimeoutError.__init__"],["GenesisError.__init__","GenesisError._capture_stack_trace"],["InfrastructureError.__init__","ExternalServiceError.__init__"],["AuthorizationError.__init__","with.__init__"],["ProjectDetector._detect_available_tools","ProjectDetector._has_precommit"],["LinterStage.__init__","MockScriptEnvironment.__init__"],["createRequestContext","generateRequestId"],["PythonFormatterStage.__init__","ConvergentFixer.__init__"],["ValidationError.__init__","TypedConfig.__init__"],["ai_safety_validator","FormatterStage.__init__"],["ValidationStage.__init__","PythonFormatterStage.__init__"],["ConfigFormatterStage.__init__","AuthorizationError.__init__"],["GenesisError.__init__","__init__"],["LinterStage.__init__","NodeFormatterStage.__init__"],["AutoFixer.run_stage_only","run"],["LinterStage.__init__","ConfigLoader.__init__"],["ExternalServiceError.__init__","BasicFixesStage.__init__"],["BasicFixesStage.__init__","BasicFixesStage.__init__"],["JSONFormatter.__init__","LinterStage.__init__"],["GenesisTimeoutError.__init__","GenesisLogger.__init__"],["GenesisTimeoutError.__init__","Stage.__init__"],["InfrastructureError.__init__","PythonFormatterStage.__init__"],["AISafetyChecker.assert_component_safe","AISafetyChecker.check_component"],["GenesisError.to_json","GenesisError.to_dict"],["NetworkError.__init__","CircuitBreaker.__init__"],["NetworkError.__init__","LinterStage.__init__"],["ConfigLoader.get","get"],["Stage.run","NodeLinterStage.get_commands"],["JSONFormatter.__init__","AISafetyChecker.__init__"],["patch_subprocess_run","create_mock_shell_commands"],["AuthenticationError.__init__","ConfigFormatterStage.__init__"],["AuthorizationError.__init__","for.__init__"],["ConfigFormatterStage.__init__","CircuitBreakerError.__init__"],["PythonLinterStage.__init__","FormatterStage.__init__"],["ExternalServiceError.__init__","JSONFormatter.__init__"],["ValidationError.__init__","HealthCheck.__init__"],["CircuitBreakerError.__init__","CircuitBreakerError.__init__"],["JSONFormatter.__init__","TimeoutError.__init__"],["NetworkError.__init__","AutoFixer.__init__"],["BasicFixesStage.__init__","JSONFormatter.__init__"],["TestCircuitBreaker.test_reset_functionality","TestEdgeCases.failing_function"],["FormatterStage.__init__","for.__init__"],["set_context","set_current_context"],["AuthenticationError.__init__","GenesisTimeoutError.__init__"],["NetworkError.__init__","TimeoutError.__init__"],["AuthorizationError.__init__","NodeFormatterStage.__init__"],["JSONFormatter.__init__","ErrorHandler.__init__"],["LinterStage.__init__","AuthorizationError.__init__"],["AuthorizationError.__init__","NetworkError.__init__"],["AuthenticationError.__init__","Stage.__init__"],["retry","async_function"],["JSONFormatter.__init__","GenesisError.__init__"],["FormatterStage.__init__","NodeFormatterStage.__init__"],["GenesisTimeoutError.__init__","__init__"],["NetworkError.__init__","ErrorHandler.__init__"],["ConfigFormatterStage.__init__","GenesisLogger.__init__"],["ai_safety_validator","ConvergentFixer.__init__"],["FormatterStage.__init__","NetworkError.__init__"],["StageOrchestrator.__init__","StageOrchestrator._get_default_stages"],["ValidationStage.__init__","AuthenticationError.__init__"],["Stage.run","ConfigFormatterStage.get_commands"],["CircuitBreakerError.__init__","GenesisLogger.__init__"],["NetworkError.__init__","GenesisError.__init__"],["PythonFormatterStage.__init__","BasicFixesStage.__init__"],["TestResilientIntegration.test_resilient_call_decorator","test_function"],["ExternalServiceError.__init__","StageOrchestrator.__init__"],["InfrastructureError.__init__","AuthenticationError.__init__"],["NodeFormatterStage.__init__","ContextManager.__init__"],["CircuitBreaker.call_async","_can_execute"],["getRequestId","getContext"],["BasicFixesStage.__init__","StageOrchestrator.__init__"],["LinterStage.__init__","CircuitBreakerError.__init__"],["TestCircuitBreaker.test_circuit_closes_after_success_in_half_open","successful_function"],["MockFilesystem.create_structure","_create_structure_recursive"],["NetworkError.__init__","GenesisConfigLoader.__init__"],["PythonFormatterStage.__init__","JSONFormatter.__init__"],["JSONFormatter.__init__","with.__init__"],["PythonLinterStage.__init__","ConvergentFixer.__init__"],["AuthenticationError.__init__","FormatterStage.__init__"],["createTraceContext","generateSpanId"],["GenesisError.__init__","ExternalServiceError.__init__"],["NetworkError.__init__","with.__init__"],["LinterStage.__init__","GenesisLogger.__init__"],["NodeLinterStage.__init__","CircuitBreaker.__init__"],["NodeLinterStage.__init__","LinterStage.__init__"],["ValidationError.__init__","ContextManager.__init__"],["create_test_project","create_structure"],["NodeFormatterStage.__init__","PythonLinterStage.__init__"],["TestCircuitBreaker.test_circuit_half_open_after_timeout","TestEdgeCases.failing_function"],["ExternalServiceError.__init__","TypedConfig.__init__"],["NodeFormatterStage.__init__","InfrastructureError.__init__"],["BasicFixesStage.__init__","TypedConfig.__init__"],["NodeFormatterStage.__init__","MockCommandRunner.__init__"],["ai_safety_validator","BasicFixesStage.__init__"],["RateLimitError.__init__","HealthCheck.__init__"],["TestResilientIntegration.test_resilient_database","TestResilientIntegration.database_query"],["NodeLinterStage.__init__","AutoFixer.__init__"],["GenesisError.__init__","PythonFormatterStage.__init__"],["RateLimitError.__init__","CircuitBreaker.__init__"],["handle_error","handle"],["RateLimitError.__init__","LinterStage.__init__"],["PythonFormatterStage.__init__","StageOrchestrator.__init__"],["NodeFormatterStage.__init__","MockScriptEnvironment.__init__"],["ValidationError.__init__","RateLimitError.__init__"],["TestAsyncSupport.test_async_context_isolation","async_function"],["JSONFormatter.__init__","for.__init__"],["ConfigFormatterStage.__init__","ValidationStage.__init__"],["ProjectDetector.detect","ProjectDetector._detect_available_tools"],["NodeLinterStage.__init__","ErrorHandler.__init__"],["CircuitBreakerError.__init__","ValidationStage.__init__"],["RateLimitError.__init__","AutoFixer.__init__"],["NetworkError.__init__","for.__init__"],["GenesisTimeoutError.__init__","ExternalServiceError.__init__"],["NodeLinterStage.__init__","GenesisError.__init__"],["retry","CircuitBreaker.decorator"],["ValidationError.__init__","InfrastructureError.__init__"],["AuthenticationError.__init__","ConvergentFixer.__init__"],["JSONFormatter.__init__","NetworkError.__init__"],["ValidationError.__init__","MockCommandRunner.__init__"],["ValidationStage.__init__","LinterStage.__init__"],["NetworkError.__init__","NodeFormatterStage.__init__"],["NodeFormatterStage.__init__","ProjectDetector.__init__"],["ExternalServiceError.__init__","HealthCheck.__init__"],["PythonLinterStage.__init__","BasicFixesStage.__init__"],["BasicFixesStage.__init__","HealthCheck.__init__"],["NetworkError.__init__","NetworkError.__init__"],["BasicFixesStage.__init__","CircuitBreaker.__init__"],["ValidationError.__init__","MockScriptEnvironment.__init__"],["TraceContext.create_child_span","generate_span_id"],["RateLimitError.__init__","GenesisError.__init__"],["ErrorHandler._convert_to_genesis_error","ErrorContext.create_default"],["ValidationStage.__init__","AISafetyChecker.__init__"],["GenesisError.to_json","TraceContext.to_dict"],["PythonFormatterStage.__init__","TypedConfig.__init__"],["NodeLinterStage.__init__","GenesisConfigLoader.__init__"],["StageOrchestrator.run_all","run"],["InfrastructureError.__init__","CircuitBreaker.__init__"],["InfrastructureError.__init__","LinterStage.__init__"],["AISafetyChecker.assert_project_safe","AISafetyChecker.check_project"],["ExternalServiceError.__init__","AutoFixer.__init__"],["GenesisTimeoutError.__init__","PythonFormatterStage.__init__"],["ConvergentFixer.run_multiple_until_stable","run_until_stable"],["ProjectDetector.detect","ProjectDetector._has_docker"],["ValidationError.__init__","ConfigLoader.__init__"],["BasicFixesStage.__init__","AutoFixer.__init__"],["NodeFormatterStage.__init__","ResourceError.__init__"],["ValidationStage.__init__","TimeoutError.__init__"],["GenesisError.__init__","AuthenticationError.__init__"],["PythonLinterStage.__init__","JSONFormatter.__init__"],["NodeLinterStage.__init__","with.__init__"],["NodeFormatterStage.__init__","AuthorizationError.__init__"],["LinterStage.__init__","ValidationStage.__init__"],["ConfigFormatterStage.__init__","ExternalServiceError.__init__"],["TestCircuitBreaker.test_failed_call","TestEdgeCases.failing_function"],["ConvergentFixer.run_multiple_until_stable","ConvergentFixer.run_until_stable"],["ValidationStage.__init__","ErrorHandler.__init__"],["RateLimitError.__init__","GenesisConfigLoader.__init__"],["resilient_call","resilient_call"],["AutoFixer.run","_log_summary"],["MockFilesystem.__exit__","cleanup"],["ValidationStage.__init__","GenesisError.__init__"],["copy_template_structure","process_template_file"],["InfrastructureError.__init__","TimeoutError.__init__"],["JSONFormatter.__init__","ConfigFormatterStage.__init__"],["InfrastructureError.__init__","ErrorHandler.__init__"],["ResourceError.__init__","JSONFormatter.__init__"],["PythonFormatterStage.__init__","HealthCheck.__init__"],["ValidationError.__init__","ResourceError.__init__"],["PythonFormatterStage.__init__","CircuitBreaker.__init__"],["InfrastructureError.__init__","GenesisError.__init__"],["ConfigFormatterStage.__init__","PythonFormatterStage.__init__"],["TestCircuitBreaker.test_thread_safety","TestCircuitBreaker.worker_failing"],["TestCircuitBreaker.test_circuit_half_open_after_timeout","TestCircuitBreaker.failing_function"],["RateLimitError.__init__","RateLimitError.__init__"],["validate_ai_safety_limits","count_files_in_directory"],["JSONFormatter.__init__","GenesisTimeoutError.__init__"],["create_mock_git","MockGit.configure_command"],["ValidationError.__init__","AuthorizationError.__init__"],["AuthenticationError.__init__","BasicFixesStage.__init__"],["create_mock_git","configure_command"],["AuthorizationError.__init__","ConvergentFixer.__init__"],["BasicFixesStage.__init__","GenesisConfigLoader.__init__"],["PythonLinterStage.__init__","StageOrchestrator.__init__"],["CircuitBreaker.async_wrapper","CircuitBreaker.call_async"],["PythonFormatterStage.__init__","AutoFixer.__init__"],["ExternalServiceError.__init__","ContextManager.__init__"],["NodeLinterStage.__init__","for.__init__"],["BasicFixesStage.__init__","ContextManager.__init__"],["ValidationStage.__init__","with.__init__"],["CircuitBreaker.call","CircuitBreaker._record_failure"],["GenesisTimeoutError.__init__","AuthenticationError.__init__"],["InfrastructureError.__init__","GenesisConfigLoader.__init__"],["NodeFormatterStage.__init__","GenesisLogger.__init__"],["NodeFormatterStage.__init__","Stage.__init__"],["NodeLinterStage.__init__","NodeFormatterStage.__init__"],["ResourceError.__init__","StageOrchestrator.__init__"],["NodeLinterStage.__init__","NetworkError.__init__"],["ConfigFormatterStage.__init__","NodeLinterStage.__init__"],["ExternalServiceError.__init__","RateLimitError.__init__"],["ValidationError.__init__","CircuitBreakerError.__init__"],["InfrastructureError.__init__","with.__init__"],["BasicFixesStage.__init__","RateLimitError.__init__"],["CircuitBreakerError.__init__","NodeLinterStage.__init__"],["RateLimitError.__init__","NodeFormatterStage.__init__"],["create_mock_git","MockCommandRunner.configure_command"],["load_config","get"],["resilientExternalService","resilientCall"],["RateLimitError.__init__","ConfigLoader.__init__"],["PythonLinterStage.__init__","TypedConfig.__init__"],["RequestContext.to_dict","RequestContext.to_dict"],["JSONFormatter.__init__","FormatterStage.__init__"],["ResourceError.__init__","ValidationError.__init__"],["ai_safety_validator","HealthCheck.__init__"],["bootstrap_command","bootstrap_project"],["ProjectDetector._detect_available_tools","ProjectDetector._has_docker"],["ExternalServiceError.__init__","InfrastructureError.__init__"],["ai_safety_validator","CircuitBreaker.__init__"],["ValidationError.__init__","GenesisLogger.__init__"],["ai_safety_validator","LinterStage.__init__"],["ContextManager.context_scope","ContextManager.clear_current_context"],["GenesisError._create_default_context","ErrorContext.create_default"],["BasicFixesStage.__init__","InfrastructureError.__init__"],["PythonFormatterStage.__init__","GenesisConfigLoader.__init__"],["AutoFixer.run","AutoFixer._log_summary"],["get_correlation_id","get_context"],["ValidationStage.__init__","for.__init__"],["NodeFormatterStage.__init__","__init__"],["GenesisError.__init__","CircuitBreaker.__init__"],["GenesisError.__init__","LinterStage.__init__"],["ExternalServiceError.__init__","MockScriptEnvironment.__init__"],["PythonFormatterStage.__init__","ContextManager.__init__"],["BasicFixesStage.__init__","MockScriptEnvironment.__init__"],["ContextManager.context_scope","set_current_context"],["ResourceError.__init__","TypedConfig.__init__"],["ai_safety_validator","AutoFixer.__init__"],["bootstrap_project","get_template_path"],["ConfigFormatterStage.__init__","ValidationError.__init__"],["TestCircuitBreaker.test_failed_call","TestCircuitBreaker.failing_function"],["TestEdgeCases.test_zero_failure_threshold","failing_function"],["CircuitBreakerError.__init__","ValidationError.__init__"],["ExternalServiceError.__init__","NodeFormatterStage.__init__"],["InfrastructureError.__init__","for.__init__"],["ValidationStage.__init__","NetworkError.__init__"],["BasicFixesStage.__init__","NodeFormatterStage.__init__"],["LinterStage.__init__","NodeLinterStage.__init__"],["ExternalServiceError.__init__","ConfigLoader.__init__"],["BasicFixesStage.__init__","ConfigLoader.__init__"],["CircuitBreaker._can_execute","CircuitBreaker._transition_to_state"],["PythonFormatterStage.__init__","RateLimitError.__init__"],["create_mock_shell_commands","MockGit.configure_command"],["ai_safety_validator","ErrorHandler.__init__"],["GenesisError.__init__","TimeoutError.__init__"],["PythonLinterStage.__init__","HealthCheck.__init__"],["TestResilientIntegration.test_resilient_external_service","external_api"],["contextSpanSync","getContextManager"],["create_mock_shell_commands","configure_command"],["ValidationError.__init__","__init__"],["ai_safety_validator","GenesisError.__init__"],["InfrastructureError.__init__","NetworkError.__init__"],["GenesisError.__init__","ErrorHandler.__init__"],["AuthorizationError.__init__","JSONFormatter.__init__"],["GenesisError.__init__","GenesisError.__init__"],["FormatterStage.__init__","JSONFormatter.__init__"],["PythonLinterStage.__init__","AutoFixer.__init__"],["JSONFormatter.__init__","ConvergentFixer.__init__"],["ResourceError.__init__","HealthCheck.__init__"],["GenesisTimeoutError.__init__","LinterStage.__init__"],["ConfigLoader.get","ConfigLoader.get"],["HealthCheck.get_summary","HealthCheck.run_all_checks"],["NetworkError.__init__","ConvergentFixer.__init__"],["CircuitBreaker.call","_record_success"],["ai_safety_validator","GenesisConfigLoader.__init__"],["PythonFormatterStage.__init__","MockScriptEnvironment.__init__"],["LinterStage.__init__","ValidationError.__init__"],["RateLimitError.__init__","CircuitBreakerError.__init__"],["ExternalServiceError.__init__","AuthorizationError.__init__"],["GenesisError.__init__","GenesisConfigLoader.__init__"],["GenesisTimeoutError.__init__","AISafetyChecker.__init__"],["ValidationStage.__init__","ConfigFormatterStage.__init__"],["PythonFormatterStage.__init__","NodeFormatterStage.__init__"],["PythonFormatterStage.__init__","ConfigLoader.__init__"],["ValidationError.__init__","ValidationStage.__init__"],["AuthorizationError.__init__","StageOrchestrator.__init__"],["GenesisTimeoutError.__init__","TimeoutError.__init__"],["GenesisError.__init__","with.__init__"],["ValidationStage.__init__","GenesisTimeoutError.__init__"],["ai_safety_validator","RateLimitError.__init__"],["FormatterStage.__init__","StageOrchestrator.__init__"],["InfrastructureError.__init__","ConfigFormatterStage.__init__"],["GenesisTimeoutError.__init__","ErrorHandler.__init__"],["AuthenticationError.__init__","HealthCheck.__init__"],["AuthenticationError.__init__","CircuitBreaker.__init__"],["AuthenticationError.__init__","LinterStage.__init__"],["ExternalServiceError.__init__","CircuitBreakerError.__init__"],["NodeFormatterStage.__init__","ExternalServiceError.__init__"],["ConfigFormatterStage.__init__","MockFilesystem.__init__"],["BasicFixesStage.__init__","CircuitBreakerError.__init__"],["getContext","getContextManager"],["CircuitBreakerError.__init__","MockFilesystem.__init__"],["bootstrap_project","copy_template_structure"],["InfrastructureError.__init__","GenesisTimeoutError.__init__"],["PythonLinterStage.__init__","ContextManager.__init__"],["create_genesis_project_structure","MockFilesystem.create_structure"],["ConfigFormatterStage.__init__","AISafetyChecker.__init__"],["AuthenticationError.__init__","AutoFixer.__init__"],["FormatterStage.__init__","ValidationError.__init__"],["ai_safety_validator","validate_file_count"],["CircuitBreakerError.__init__","AISafetyChecker.__init__"],["ExternalServiceError.__init__","GenesisLogger.__init__"],["GenesisTimeoutError.__init__","MockGit.__init__"],["JSONFormatter.__init__","BasicFixesStage.__init__"],["createChildLogger","getLogger"],["ai_safety_validator","for.__init__"],["BasicFixesStage.__init__","GenesisLogger.__init__"],["ConfigFormatterStage.__init__","TimeoutError.__init__"],["patch_git_operations","create_mock_git"],["AuthorizationError.__init__","TypedConfig.__init__"],["PythonLinterStage.__init__","RateLimitError.__init__"],["ResourceError.__init__","ContextManager.__init__"],["NodeFormatterStage.__init__","PythonFormatterStage.__init__"],["AuthenticationError.__init__","ErrorHandler.__init__"],["GenesisError.__init__","for.__init__"],["ValidationError.__init__","ExternalServiceError.__init__"],["FormatterStage.__init__","TypedConfig.__init__"],["MockScriptEnvironment.run_script","MockCommandRunner.mock_run"],["ProjectDetector._detect_available_tools","_has_npm_bin"],["ai_safety_validator","NodeFormatterStage.__init__"],["MockScriptEnvironment.__init__","create_genesis_script_mocks"],["AuthenticationError.__init__","GenesisError.__init__"],["GenesisTimeoutError.__init__","with.__init__"],["ValidationStage.__init__","FormatterStage.__init__"],["ai_safety_validator","ConfigLoader.__init__"],["get_file_count_report","validate_ai_safety_limits"],["LinterStage.__init__","MockFilesystem.__init__"],["PythonLinterStage.__init__","InfrastructureError.__init__"],["NodeLinterStage.__init__","ConvergentFixer.__init__"],["GenesisError.__init__","NetworkError.__init__"],["ResourceError.__init__","RateLimitError.__init__"],["PythonFormatterStage.__init__","CircuitBreakerError.__init__"],["capture_subprocess","MockCommandRunner.mock_run"],["NetworkError.__init__","JSONFormatter.__init__"],["GenesisError.to_dict","TraceContext.to_dict"],["InfrastructureError.__init__","FormatterStage.__init__"],["AuthenticationError.__init__","GenesisConfigLoader.__init__"],["PythonLinterStage.__init__","MockScriptEnvironment.__init__"],["TestCircuitBreaker.test_circuit_opens_after_failures","TestEdgeCases.failing_function"],["ConfigFormatterStage.__init__","MockGit.__init__"],["LinterStage.__init__","AISafetyChecker.__init__"],["ValidationError.__init__","PythonFormatterStage.__init__"],["get_context","get_current_context"],["CircuitBreakerError.__init__","MockGit.__init__"],["AuthorizationError.__init__","HealthCheck.__init__"],["TestCircuitBreaker.test_circuit_rejects_calls_when_open","TestEdgeCases.failing_function"],["ResourceError.__init__","InfrastructureError.__init__"],["RateLimitError.__init__","ValidationStage.__init__"],["PythonLinterStage.__init__","NodeFormatterStage.__init__"],["FormatterStage.__init__","HealthCheck.__init__"],["PythonFormatterStage.__init__","GenesisLogger.__init__"],["ResourceError.__init__","MockCommandRunner.__init__"],["PythonLinterStage.__init__","ConfigLoader.__init__"],["ContextManager.create_context","generate_correlation_id"],["CircuitBreaker.decorator","CircuitBreaker.call_async"],["mock_shell_commands","MockCommandRunner.mock_run"],["ResourceError.__init__","MockScriptEnvironment.__init__"],["GenesisTimeoutError.__init__","for.__init__"],["ConfigFormatterStage.__init__","PythonLinterStage.__init__"],["JSONFormatter.__init__","StageOrchestrator.__init__"],["get_context","ContextManager.get_current_context"],["NodeFormatterStage.__init__","AuthenticationError.__init__"],["CircuitBreakerError.__init__","PythonLinterStage.__init__"],["ContextManager.create_context","generate_request_id"],["HealthCheck.get_summary","get_overall_status"],["ValidationError.__init__","NodeLinterStage.__init__"],["NetworkError.__init__","StageOrchestrator.__init__"],["ValidationStage.__init__","ConvergentFixer.__init__"],["CircuitBreaker._can_execute","CircuitBreaker._should_attempt_reset"],["ResourceError.__init__","ConfigLoader.__init__"],["CircuitBreakerError.__init__","MockCommandRunner.__init__"],["GenesisTimeoutError.__init__","NetworkError.__init__"],["GenesisError.__init__","ConfigFormatterStage.__init__"],["resilient_call","CircuitBreaker.decorator"],["resilient_call","external_api_call"],["ExternalServiceError.__init__","ValidationStage.__init__"],["BasicFixesStage.__init__","ValidationStage.__init__"],["LinterStage.__init__","MockGit.__init__"],["InfrastructureError.__init__","ConvergentFixer.__init__"],["GenesisError.__init__","GenesisTimeoutError.__init__"],["resilient_database","retry"],["PythonLinterStage.__init__","AuthorizationError.__init__"],["AuthenticationError.__init__","for.__init__"],["ValidationError.__init__","AuthenticationError.__init__"],["ConfigFormatterStage.__init__","ProjectDetector.__init__"],["ResourceError.__init__","ResourceError.__init__"],["AuthenticationError.__init__","NodeFormatterStage.__init__"],["CircuitBreakerError.__init__","ProjectDetector.__init__"],["LinterStage.__init__","PythonLinterStage.__init__"],["NetworkError.__init__","TypedConfig.__init__"],["AuthorizationError.__init__","ContextManager.__init__"],["ResourceError.__init__","AuthorizationError.__init__"],["HealthCheck.get_overall_status","HealthCheck.run_all_checks"],["NodeLinterStage.__init__","JSONFormatter.__init__"],["LinterStage.__init__","MockCommandRunner.__init__"],["retry","_sync_retry_wrapper"],["FormatterStage.__init__","ContextManager.__init__"],["PythonLinterStage.__init__","CircuitBreakerError.__init__"],["GenesisTimeoutError.__init__","ConfigFormatterStage.__init__"],["ConfigFormatterStage.__init__","ResourceError.__init__"],["CircuitBreakerError.__init__","ResourceError.__init__"],["GenesisError.__init__","GenesisError._create_default_context"],["PythonFormatterStage.__init__","ValidationStage.__init__"],["AuthorizationError.__init__","RateLimitError.__init__"],["RateLimitError.__init__","JSONFormatter.__init__"],["ValidationStage.__init__","BasicFixesStage.__init__"],["CircuitBreakerError.__init__","AuthorizationError.__init__"],["TestCircuitBreaker.test_circuit_opens_after_failures","TestCircuitBreaker.failing_function"],["GenesisError.to_dict","ErrorContext.to_dict"],["MockFilesystem._create_structure_recursive","MockFilesystem.create_file"],["GenesisError.__init__","FormatterStage.__init__"],["GenesisTimeoutError.__init__","GenesisTimeoutError.__init__"],["FormatterStage.__init__","RateLimitError.__init__"],["JSONFormatter.__init__","HealthCheck.__init__"],["JSONFormatter.__init__","CircuitBreaker.__init__"],["PythonLinterStage.__init__","GenesisLogger.__init__"],["ResourceError.__init__","CircuitBreakerError.__init__"],["TestCircuitBreaker.test_circuit_rejects_calls_when_open","TestCircuitBreaker.failing_function"],["get_context","get_context_manager"],["NetworkError.__init__","HealthCheck.__init__"],["create_genesis_project_structure","create_structure"],["LinterStage.__init__","ProjectDetector.__init__"],["TestCircuitBreaker.test_circuit_closes_after_success_in_half_open","TestEdgeCases.failing_function"],["AuthorizationError.__init__","InfrastructureError.__init__"],["InfrastructureError.__init__","BasicFixesStage.__init__"],["NodeLinterStage.__init__","StageOrchestrator.__init__"],["RateLimitError.__init__","NodeLinterStage.__init__"],["TestResilientIntegration.test_resilient_external_service","TestResilientIntegration.external_api"],["NodeFormatterStage.__init__","MockFilesystem.__init__"],["JSONFormatter.__init__","AutoFixer.__init__"],["FormatterStage.__init__","InfrastructureError.__init__"],["get_trace_id","get_context"],["MockScriptEnvironment.run_script","MockGit.mock_run"],["AuthorizationError.__init__","MockScriptEnvironment.__init__"],["FormatterStage.__init__","MockCommandRunner.__init__"],["ResourceError.__init__","GenesisLogger.__init__"],["ConfigFormatterStage.__init__","ConfigFormatterStage.__init__"],["ConfigLoader.load","load_file"],["NodeFormatterStage.__init__","AISafetyChecker.__init__"],["create_genesis_script_mocks","MockGit.configure_command"],["FormatterStage.__init__","MockScriptEnvironment.__init__"],["load_config","GenesisConfigLoader.load"],["RateLimitError.__init__","StageOrchestrator.__init__"],["LinterStage.__init__","ResourceError.__init__"],["load_config","ConfigLoader.get"],["create_genesis_script_mocks","configure_command"],["NodeLinterStage.__init__","ValidationError.__init__"],["ConfigFormatterStage.__init__","GenesisTimeoutError.__init__"],["setCorrelationId","getContext"],["InfrastructureError.__init__","JSONFormatter.__init__"],["RequestContext.to_dict","to_dict"],["TestCircuitBreakerDecorator.test_factory_decorator","test_function"],["AuthorizationError.__init__","ConfigLoader.__init__"],["NodeFormatterStage.__init__","TimeoutError.__init__"],["capture_subprocess","MockGit.mock_run"],["get_request_id","get_context"],["ConfigFormatterStage.__init__","Stage.__init__"],["ContextManager.context_scope","ContextManager.set_current_context"],["FormatterStage.__init__","ConfigLoader.__init__"],["GenesisTimeoutError.__init__","FormatterStage.__init__"],["ExternalServiceError.__init__","NodeLinterStage.__init__"],["CircuitBreakerError.__init__","Stage.__init__"],["ai_safety_validator","ValidationStage.__init__"],["ValidationError.__init__","MockFilesystem.__init__"],["NodeFormatterStage.__init__","ErrorHandler.__init__"],["BasicFixesStage.__init__","NodeLinterStage.__init__"],["RateLimitError.__init__","ValidationError.__init__"],["GenesisError.__init__","ConvergentFixer.__init__"],["NodeLinterStage.__init__","TypedConfig.__init__"],["Stage.run","BasicFixesStage.get_commands"],["AutoFixer.run_stage_only","AutoFixer._log_summary"],["handleError","getErrorHandler"],["ValidationStage.__init__","StageOrchestrator.__init__"],["ValidationError.__init__","AISafetyChecker.__init__"],["ResourceError.__init__","__init__"],["CircuitBreaker.decorator","call"],["bootstrap_project","create_project_directory"],["JSONFormatter.__init__","GenesisConfigLoader.__init__"],["mock_shell_commands","MockGit.mock_run"],["JSONFormatter.__init__","ContextManager.__init__"],["RateLimitError.__init__","TypedConfig.__init__"],["ValidationError.__init__","TimeoutError.__init__"],["create_genesis_script_mocks","MockCommandRunner.configure_command"],["NodeFormatterStage.__init__","MockGit.__init__"],["InfrastructureError.__init__","StageOrchestrator.__init__"],["AuthorizationError.__init__","AuthorizationError.__init__"],["NetworkError.__init__","ContextManager.__init__"],["FormatterStage.__init__","ResourceError.__init__"],["ConfigFormatterStage.__init__","__init__"],["PythonLinterStage.__init__","ValidationStage.__init__"],["TestCircuitBreaker.test_thread_safety","worker_failing"],["CircuitBreakerError.__init__","__init__"],["ExternalServiceError.__init__","ValidationError.__init__"],["ConfigFormatterStage.__init__","FormatterStage.__init__"],["FormatterStage.__init__","AuthorizationError.__init__"],["BasicFixesStage.__init__","ValidationError.__init__"],["LinterStage.__init__","Stage.__init__"],["JSONFormatter.__init__","RateLimitError.__init__"],["NodeFormatterStage.__init__","with.__init__"],["NodeLinterStage.__init__","HealthCheck.__init__"],["TestCircuitBreaker.test_async_calls","async_successful"],["PythonFormatterStage.__init__","NodeLinterStage.__init__"],["NetworkError.__init__","RateLimitError.__init__"],["GenesisTimeoutError.__init__","ConvergentFixer.__init__"],["resilient_database","resilient_call"],["ResourceError.__init__","ValidationStage.__init__"],["CircuitBreaker.reset","_transition_to_state"],["ValidationError.__init__","MockGit.__init__"],["Stage.run","get_commands"],["AuthorizationError.__init__","CircuitBreakerError.__init__"],["TestCircuitBreaker.test_circuit_closes_after_success_in_half_open","TestCircuitBreaker.failing_function"],["Stage.run","ValidationStage.get_commands"],["FormatterStage.__init__","CircuitBreakerError.__init__"],["InfrastructureError.__init__","TypedConfig.__init__"],["GenesisError.__init__","BasicFixesStage.__init__"],["NetworkError.__init__","InfrastructureError.__init__"],["ErrorHandler.handle","ErrorHandler._convert_to_genesis_error"],["JSONFormatter.__init__","MockScriptEnvironment.__init__"],["ValidationError.__init__","with.__init__"],["LinterStage.__init__","__init__"],["TestCircuitBreaker.test_reset_functionality","TestCircuitBreaker.failing_function"],["HealthCheck.run_all_checks","HealthCheck.run_check"],["AuthorizationError.__init__","GenesisLogger.__init__"],["NetworkError.__init__","MockScriptEnvironment.__init__"],["ValidationError.__init__","PythonLinterStage.__init__"],["ai_safety_validator","JSONFormatter.__init__"],["JSONFormatter.__init__","NodeFormatterStage.__init__"],["NodeFormatterStage.__init__","for.__init__"],["FormatterStage.__init__","GenesisLogger.__init__"],["PythonFormatterStage.__init__","ValidationError.__init__"],["clear_context","get_context_manager"],["JSONFormatter.__init__","ConfigLoader.__init__"],["ValidationStage.__init__","HealthCheck.__init__"],["ValidationStage.__init__","CircuitBreaker.__init__"],["GenesisError.__init__","JSONFormatter.__init__"],["ProjectDetector.detect","_has_docker"],["NetworkError.__init__","ConfigLoader.__init__"],["resilient_call","decorator"],["MockCommandRunner.get_call_count","get_calls_matching"],["ResourceError.__init__","ExternalServiceError.__init__"],["NodeFormatterStage.__init__","NetworkError.__init__"],["InfrastructureError.__init__","HealthCheck.__init__"],["ai_safety_validator","NodeLinterStage.__init__"],["ValidationStage.__init__","AutoFixer.__init__"],["set_correlation_id","get_context"],["NodeLinterStage.__init__","ContextManager.__init__"],["CircuitBreaker.call","CircuitBreaker._record_success"],["bootstrap_project","initialize_git_repo"],["ExternalServiceError.__init__","MockFilesystem.__init__"],["GenesisTimeoutError.__init__","BasicFixesStage.__init__"],["BasicFixesStage.__init__","MockFilesystem.__init__"],["ai_safety_validator","StageOrchestrator.__init__"],["ValidationError.__init__","ProjectDetector.__init__"],["InfrastructureError.__init__","AutoFixer.__init__"],["FormatterStage.__init__","__init__"],["CircuitBreakerError.__init__","ExternalServiceError.__init__"],["ExternalServiceError.__init__","AISafetyChecker.__init__"],["ResourceError.__init__","PythonFormatterStage.__init__"],["HealthCheck.run_all_checks","run_check"],["RateLimitError.__init__","ContextManager.__init__"],["BasicFixesStage.__init__","AISafetyChecker.__init__"],["GenesisError.__init__","StageOrchestrator.__init__"],["NodeLinterStage.__init__","RateLimitError.__init__"],["ValidationError.__init__","NetworkError.__init__"],["NetworkError.__init__","AuthorizationError.__init__"],["PythonLinterStage.__init__","NodeLinterStage.__init__"],["ai_safety_validator","ValidationError.__init__"],["contextSpan","getContextManager"],["ValidationStage.__init__","GenesisConfigLoader.__init__"],["NodeFormatterStage.__init__","ConfigFormatterStage.__init__"],["CircuitBreakerError.__init__","PythonFormatterStage.__init__"],["NodeLinterStage.__init__","InfrastructureError.__init__"],["ProjectDetector.detect","_detect_project_type"],["ConfigFormatterStage.__init__","BasicFixesStage.__init__"],["NodeLinterStage.__init__","MockCommandRunner.__init__"],["JSONFormatter.__init__","CircuitBreakerError.__init__"],["ValidationStage.__init__","ContextManager.__init__"],["AuthorizationError.__init__","ValidationStage.__init__"],["ResourceError.__init__","NodeLinterStage.__init__"],["GenesisError.to_json","RequestContext.to_dict"],["ai_safety_validator","TypedConfig.__init__"],["NodeLinterStage.__init__","MockScriptEnvironment.__init__"],["ProjectDetector.detect","_has_precommit"],["CircuitBreaker.sync_wrapper","call"],["NodeFormatterStage.__init__","GenesisTimeoutError.__init__"],["NetworkError.__init__","CircuitBreakerError.__init__"],["RateLimitError.__init__","PythonLinterStage.__init__"],["PythonFormatterStage.__init__","MockFilesystem.__init__"],["LinterStage.__init__","ExternalServiceError.__init__"],["FormatterStage.__init__","ValidationStage.__init__"],["TestCircuitBreaker.test_half_open_call_limit","TestCircuitBreaker.slow_function"],["RateLimitError.__init__","InfrastructureError.__init__"],["GenesisError.__init__","TypedConfig.__init__"],["ExternalServiceError.__init__","MockGit.__init__"],["ProjectDetector._detect_available_tools","_get_poetry_dev_tools"],["RateLimitError.__init__","MockCommandRunner.__init__"],["InfrastructureError.__init__","ContextManager.__init__"],["BasicFixesStage.__init__","MockGit.__init__"],["AISafetyChecker.check_component","count_files_in_directory"],["AuthenticationError.__init__","JSONFormatter.__init__"],["JSONFormatter.__init__","GenesisLogger.__init__"],["ValidationStage.__init__","RateLimitError.__init__"],["PythonFormatterStage.__init__","AISafetyChecker.__init__"],["TestCircuitBreaker.test_circuit_reopens_on_failure_in_half_open","failing_function"],["PythonLinterStage.__init__","ValidationError.__init__"],["NodeLinterStage.__init__","ConfigLoader.__init__"],["clearContext","getContextManager"],["RateLimitError.__init__","MockScriptEnvironment.__init__"],["TestCircuitBreaker.test_circuit_closes_after_success_in_half_open","TestCircuitBreaker.successful_function"],["ValidationError.__init__","ConfigFormatterStage.__init__"],["ProjectDetector.detect","ProjectDetector._detect_project_type"],["ProjectDetector._detect_available_tools","_has_docker"],["AutoFixer._stage_all_files","run"],["NetworkError.__init__","GenesisLogger.__init__"],["retry","retry"],["ResourceError.__init__","AuthenticationError.__init__"],["assert_file_count_safe","count_files_in_directory"],["InfrastructureError.__init__","RateLimitError.__init__"],["LinterStage.__init__","PythonFormatterStage.__init__"],["retry","sleep"],["ValidationError.__init__","GenesisTimeoutError.__init__"],["ExternalServiceError.__init__","PythonLinterStage.__init__"],["BasicFixesStage.__init__","PythonLinterStage.__init__"],["ValidationError.__init__","Stage.__init__"],["CircuitBreaker.call_async","CircuitBreaker._record_success"],["ExternalServiceError.__init__","MockCommandRunner.__init__"],["ConfigFormatterStage.__init__","AuthenticationError.__init__"],["AuthorizationError.__init__","ExternalServiceError.__init__"],["RateLimitError.__init__","ProjectDetector.__init__"],["BasicFixesStage.__init__","MockCommandRunner.__init__"],["GenesisError.to_dict","GenesisError.to_dict"],["ValidationStage.__init__","MockScriptEnvironment.__init__"],["GenesisError.__init__","HealthCheck.__init__"],["CircuitBreakerError.__init__","AuthenticationError.__init__"],["NodeLinterStage.__init__","ResourceError.__init__"],["NodeFormatterStage.__init__","FormatterStage.__init__"],["FormatterStage.__init__","ExternalServiceError.__init__"],["InfrastructureError.__init__","InfrastructureError.__init__"],["AuthenticationError.__init__","StageOrchestrator.__init__"],["TestCircuitBreakerDecorator.test_decorator_sync_function","test_function"],["NodeLinterStage.__init__","AuthorizationError.__init__"],["ValidationStage.__init__","NodeFormatterStage.__init__"],["PythonFormatterStage.__init__","MockGit.__init__"],["ValidationStage.__init__","ConfigLoader.__init__"],["InfrastructureError.__init__","MockScriptEnvironment.__init__"],["TestResilientIntegration.test_resilient_call_async","TestAsyncSupport.async_function"],["GenesisError.__init__","AutoFixer.__init__"],["RateLimitError.__init__","ResourceError.__init__"],["AuthorizationError.__init__","PythonFormatterStage.__init__"],["set_context","get_context_manager"],["RateLimitError.__init__","AuthorizationError.__init__"],["AutoFixer._stage_all_files","Stage.run"],["AuthenticationError.__init__","ValidationError.__init__"],["InfrastructureError.__init__","NodeFormatterStage.__init__"],["ExternalServiceError.__init__","ProjectDetector.__init__"],["FormatterStage.__init__","PythonFormatterStage.__init__"],["BasicFixesStage.__init__","ProjectDetector.__init__"],["InfrastructureError.__init__","ConfigLoader.__init__"],["TestEdgeCases.test_metrics_thread_safety","TestEdgeCases.worker"],["ValidationError.__init__","FormatterStage.__init__"],["_sync_retry_wrapper","wrapper"],["getMetadata","getContext"],["PythonFormatterStage.__init__","PythonLinterStage.__init__"],["NodeLinterStage.__init__","CircuitBreakerError.__init__"],["RequestContext.create_new","generate_correlation_id"],["addLoggerContextMethod","getLoggerContext"],["LinterStage.__init__","AuthenticationError.__init__"],["ProjectDetector._detect_available_tools","_has_precommit"],["PythonFormatterStage.__init__","InfrastructureError.__init__"],["CircuitBreaker.call_async","CircuitBreaker._record_failure"],["AuthenticationError.__init__","TypedConfig.__init__"],["TestCircuitBreaker.test_successful_call","successful_function"],["PythonFormatterStage.__init__","MockCommandRunner.__init__"],["_async_retry_wrapper","wrapper"],["GenesisTimeoutError.__init__","HealthCheck.__init__"],["JSONFormatter.__init__","ValidationStage.__init__"],["PythonLinterStage.__init__","MockFilesystem.__init__"],["GenesisTimeoutError.__init__","CircuitBreaker.__init__"],["ExternalServiceError.__init__","ResourceError.__init__"],["RequestContext.create_new","generate_request_id"],["clear_context","clear_current_context"],["BasicFixesStage.__init__","ResourceError.__init__"],["RequestContext.to_dict","ErrorContext.to_dict"],["CircuitBreaker._record_success","CircuitBreaker._transition_to_state"],["NetworkError.__init__","ValidationStage.__init__"],["AuthorizationError.__init__","NodeLinterStage.__init__"],["NodeFormatterStage.__init__","ConvergentFixer.__init__"],["NodeLinterStage.__init__","GenesisLogger.__init__"],["TestCircuitBreaker.test_circuit_half_open_after_timeout","TestCircuitBreaker.successful_function"],["ai_safety_validator","ContextManager.__init__"],["BasicFixesStage.__init__","AuthorizationError.__init__"],["PythonLinterStage.__init__","AISafetyChecker.__init__"],["FormatterStage.__init__","NodeLinterStage.__init__"],["GenesisTimeoutError.__init__","AutoFixer.__init__"],["create_mock_shell_commands","MockCommandRunner.configure_command"],["GenesisError.__init__","ContextManager.__init__"],["ResourceError.__init__","MockFilesystem.__init__"],["InfrastructureError.__init__","AuthorizationError.__init__"],["CircuitBreaker._record_failure","_transition_to_state"],["setContext","getContextManager"],["TestEdgeCases.test_zero_failure_threshold","TestEdgeCases.failing_function"],["RateLimitError.__init__","GenesisLogger.__init__"],["RateLimitError.__init__","Stage.__init__"],["CircuitBreaker.async_wrapper","call_async"],["PythonFormatterStage.__init__","ProjectDetector.__init__"],["TestCircuitBreaker.test_async_calls","TestCircuitBreaker.async_successful"],["ResourceError.__init__","AISafetyChecker.__init__"],["ValidationStage.__init__","CircuitBreakerError.__init__"],["FormatterStage.__init__","AuthenticationError.__init__"],["ConfigFormatterStage.__init__","CircuitBreaker.__init__"],["ConfigFormatterStage.__init__","LinterStage.__init__"],["GenesisTimeoutError.__init__","GenesisError.__init__"],["GenesisError.__init__","RateLimitError.__init__"],["ValidationError.__init__","ConvergentFixer.__init__"],["ResourceError.__init__","TimeoutError.__init__"],["CircuitBreakerError.__init__","LinterStage.__init__"],["AuthorizationError.__init__","ValidationError.__init__"],["ai_safety_validator","PythonLinterStage.__init__"],["TestCircuitBreakerDecorator.test_factory_decorator","TestCircuitBreakerDecorator.test_function"],["ai_safety_validator","InfrastructureError.__init__"],["InfrastructureError.__init__","CircuitBreakerError.__init__"],["retry","TestAsyncSupport.async_function"],["PythonFormatterStage.__init__","ResourceError.__init__"],["NetworkError.__init__","ExternalServiceError.__init__"],["ai_safety_validator","MockCommandRunner.__init__"],["ValidationStage.__init__","GenesisLogger.__init__"],["ConfigFormatterStage.__init__","AutoFixer.__init__"],["GenesisError.__init__","_create_default_context"],["PythonLinterStage.__init__","MockGit.__init__"],["ConfigLoader.load","ConfigLoader.load_env"],["PythonFormatterStage.__init__","AuthorizationError.__init__"],["ExternalServiceError.__init__","Stage.__init__"],["GenesisError.__init__","InfrastructureError.__init__"],["GenesisTimeoutError.__init__","GenesisConfigLoader.__init__"],["ai_safety_validator","MockScriptEnvironment.__init__"],["StageOrchestrator.__init__","_get_default_stages"],["BasicFixesStage.__init__","Stage.__init__"],["TestCircuitBreaker.test_half_open_call_limit","slow_function"],["RateLimitError.__init__","__init__"],["CircuitBreakerError.__init__","TimeoutError.__init__"],["GenesisTimeoutError.__init__","ContextManager.__init__"],["TestResilientIntegration.test_resilient_call_decorator","TestCircuitBreakerDecorator.test_function"],["GenesisError.__init__","MockScriptEnvironment.__init__"],["ConfigFormatterStage.__init__","ErrorHandler.__init__"],["InfrastructureError.__init__","GenesisLogger.__init__"],["NodeFormatterStage.__init__","BasicFixesStage.__init__"],["CircuitBreakerError.__init__","ErrorHandler.__init__"],["ResourceError.__init__","MockGit.__init__"],["ConfigFormatterStage.__init__","GenesisError.__init__"],["NetworkError.__init__","PythonFormatterStage.__init__"],["PythonLinterStage.__init__","PythonLinterStage.__init__"],["CircuitBreakerError.__init__","GenesisError.__init__"],["GenesisError.__init__","NodeFormatterStage.__init__"],["JSONFormatter.__init__","JSONFormatter.__init__"],["LinterStage.__init__","CircuitBreaker.__init__"],["LinterStage.__init__","LinterStage.__init__"],["GenesisError.__init__","ConfigLoader.__init__"],["ai_safety_validator","ProjectDetector.__init__"],["GenesisTimeoutError.__init__","RateLimitError.__init__"],["MockScriptEnvironment.run_script","mock_run"],["PythonLinterStage.__init__","MockCommandRunner.__init__"],["clear_context","ContextManager.clear_current_context"],["NodeLinterStage.__init__","ValidationStage.__init__"],["get_user_id","get_context"],["CircuitBreaker.call_async","_record_success"],["ResourceError.__init__","with.__init__"],["ExternalServiceError.__init__","__init__"],["Stage.run","NodeFormatterStage.get_commands"],["AutoFixer._stage_all_files","AutoFixer.run"],["BasicFixesStage.__init__","__init__"],["ConfigFormatterStage.__init__","GenesisConfigLoader.__init__"],["ResourceError.__init__","PythonLinterStage.__init__"],["AuthenticationError.__init__","ContextManager.__init__"],["ContextManager.context_scope","get_current_context"],["ValidationError.__init__","BasicFixesStage.__init__"],["JSONFormatter.__init__","NodeLinterStage.__init__"],["get_template_path","find_genesis_root"],["LinterStage.__init__","TimeoutError.__init__"],["ai_safety_validator","ResourceError.__init__"],["PythonFormatterStage.__init__","Stage.__init__"],["NetworkError.__init__","NodeLinterStage.__init__"],["ConfigFormatterStage.__init__","with.__init__"],["ai_safety_validator","AuthorizationError.__init__"],["GenesisError.__init__","_capture_stack_trace"],["LinterStage.__init__","ErrorHandler.__init__"],["CircuitBreakerError.__init__","with.__init__"],["get_file_count_report","count_files_in_directory"],["CircuitBreaker._can_execute","_should_attempt_reset"],["PythonLinterStage.__init__","ProjectDetector.__init__"],["retry","unreliable_function"],["LinterStage.__init__","GenesisError.__init__"],["AuthenticationError.__init__","RateLimitError.__init__"],["TestEdgeCases.test_zero_failure_threshold","TestCircuitBreaker.failing_function"],["AuthorizationError.__init__","MockFilesystem.__init__"],["GenesisError.__init__","AuthorizationError.__init__"],["TestAsyncSupport.test_async_context_isolation","TestAsyncSupport.async_function"],["handle_error","ErrorHandler.handle"],["TestResilientIntegration.test_resilient_database","database_query"],["GenesisTimeoutError.__init__","NodeFormatterStage.__init__"],["FormatterStage.__init__","MockFilesystem.__init__"],["mock_shell_commands","mock_run"],["GenesisTimeoutError.__init__","ConfigLoader.__init__"],["CircuitBreaker._can_execute","_transition_to_state"],["ValidationStage.__init__","ValidationStage.__init__"],["NodeLinterStage.__init__","ExternalServiceError.__init__"],["AuthorizationError.__init__","AISafetyChecker.__init__"],["get_component_path","find_genesis_root"],["TestErrorHandler.test_error_handler_callbacks","TestErrorHandler.error_callback"],["load_config","load"],["ProjectDetector._detect_available_tools","_command_exists"],["ResourceError.__init__","ProjectDetector.__init__"],["AuthenticationError.__init__","InfrastructureError.__init__"],["JSONFormatter.__init__","ValidationError.__init__"],["FormatterStage.__init__","AISafetyChecker.__init__"],["PythonLinterStage.__init__","ResourceError.__init__"],["createRequestContext","generateCorrelationId"],["LinterStage.__init__","GenesisConfigLoader.__init__"],["ai_safety_validator","CircuitBreakerError.__init__"],["AuthenticationError.__init__","MockCommandRunner.__init__"],["PythonFormatterStage.__init__","__init__"],["GenesisError.to_dict","RequestContext.to_dict"],["NetworkError.__init__","ValidationError.__init__"],["InfrastructureError.__init__","ValidationStage.__init__"],["MockFilesystem._create_structure_recursive","create_directory"],["RateLimitError.__init__","ExternalServiceError.__init__"],["ResourceError.__init__","NetworkError.__init__"],["AuthenticationError.__init__","MockScriptEnvironment.__init__"],["context_span","get_context_manager"],["FormatterStage.__init__","TimeoutError.__init__"],["GenesisError.__init__","CircuitBreakerError.__init__"],["ConfigFormatterStage.__init__","for.__init__"],["HealthCheck.get_overall_status","run_all_checks"],["LinterStage.__init__","with.__init__"],["CircuitBreakerError.__init__","for.__init__"],["JSONFormatter.__init__","TypedConfig.__init__"],["NodeLinterStage.__init__","PythonFormatterStage.__init__"],["ai_safety_validator","GenesisLogger.__init__"],["ai_safety_validator","Stage.__init__"],["ConfigFormatterStage.__init__","NodeFormatterStage.__init__"],["AuthenticationError.__init__","ConfigLoader.__init__"],["ConfigFormatterStage.__init__","NetworkError.__init__"],["retry","_async_retry_wrapper"],["GenesisError.__init__","GenesisLogger.__init__"],["AutoFixer.run_stage_only","_log_summary"],["CircuitBreakerError.__init__","NetworkError.__init__"],["RateLimitError.__init__","PythonFormatterStage.__init__"],["AuthorizationError.__init__","MockGit.__init__"],["ExternalServiceError.__init__","ExternalServiceError.__init__"],["assert_component_isolation","count_files_in_directory"],["ai_safety_validator","validate_component_isolation"],["BasicFixesStage.__init__","ExternalServiceError.__init__"],["FormatterStage.__init__","MockGit.__init__"],["MockFilesystem._create_structure_recursive","MockFilesystem.create_directory"],["CircuitBreaker.call","_can_execute"],["NodeLinterStage.__init__","NodeLinterStage.__init__"],["GenesisError.to_json","to_dict"],["AuthenticationError.__init__","ResourceError.__init__"],["LinterStage.__init__","for.__init__"],["PythonLinterStage.__init__","Stage.__init__"],["ResourceError.__init__","ConfigFormatterStage.__init__"],["GenesisTimeoutError.__init__","CircuitBreakerError.__init__"],["ai_safety_validator","__init__"],["AISafetyChecker.assert_component_safe","check_component"],["FormatterStage.__init__","with.__init__"],["AuthorizationError.__init__","PythonLinterStage.__init__"],["AuthenticationError.__init__","AuthorizationError.__init__"],["ExternalServiceError.__init__","PythonFormatterStage.__init__"],["FormatterStage.__init__","PythonLinterStage.__init__"],["NodeFormatterStage.__init__","HealthCheck.__init__"],["AuthorizationError.__init__","MockCommandRunner.__init__"],["NodeFormatterStage.__init__","CircuitBreaker.__init__"],["ResourceError.__init__","GenesisTimeoutError.__init__"],["BasicFixesStage.__init__","PythonFormatterStage.__init__"],["NodeFormatterStage.__init__","LinterStage.__init__"],["LinterStage.__init__","NetworkError.__init__"],["ValidationStage.__init__","JSONFormatter.__init__"],["NodeLinterStage.__init__","AuthenticationError.__init__"],["bootstrap_project","validate_project_name"],["JSONFormatter.__init__","MockFilesystem.__init__"],["ResourceError.__init__","Stage.__init__"],["CircuitBreakerError.__init__","ConfigFormatterStage.__init__"],["TestErrorHandler.test_error_handler_callbacks","error_callback"],["NetworkError.__init__","MockFilesystem.__init__"],["NodeFormatterStage.__init__","AutoFixer.__init__"],["getCorrelationId","getContext"],["PythonFormatterStage.__init__","ExternalServiceError.__init__"],["RateLimitError.__init__","AuthenticationError.__init__"],["CircuitBreakerError.__init__","GenesisTimeoutError.__init__"],["PythonLinterStage.__init__","__init__"],["resilient_call","retry"],["AuthenticationError.__init__","CircuitBreakerError.__init__"],["context_span","context_scope"],["ValidationStage.__init__","NodeLinterStage.__init__"],["NetworkError.__init__","AISafetyChecker.__init__"],["CircuitBreaker.decorator","call_async"],["ErrorHandler._convert_to_genesis_error","create_default"],["context_span","ContextManager.context_scope"],["ValidationError.__init__","CircuitBreaker.__init__"],["ValidationError.__init__","LinterStage.__init__"],["AuthorizationError.__init__","ProjectDetector.__init__"],["NodeFormatterStage.__init__","GenesisError.__init__"],["TestCircuitBreaker.test_circuit_half_open_after_timeout","failing_function"],["FormatterStage.__init__","ProjectDetector.__init__"],["GenesisError.__init__","ValidationStage.__init__"],["InfrastructureError.__init__","NodeLinterStage.__init__"],["AuthenticationError.__init__","GenesisLogger.__init__"],["ValidationError.__init__","AutoFixer.__init__"],["ResourceError.__init__","FormatterStage.__init__"],["PythonFormatterStage.__init__","PythonFormatterStage.__init__"],["RequestContext.to_dict","GenesisError.to_dict"],["AutoFixer.run_stage_only","Stage.run"],["LinterStage.__init__","ConfigFormatterStage.__init__"],["AuthorizationError.__init__","ResourceError.__init__"],["ExternalServiceError.__init__","AuthenticationError.__init__"],["CircuitBreaker.call","CircuitBreaker._can_execute"],["BasicFixesStage.__init__","AuthenticationError.__init__"],["TestCircuitBreakerDecorator.test_decorator_sync_function","TestCircuitBreakerDecorator.test_function"],["NodeFormatterStage.__init__","GenesisConfigLoader.__init__"],["ValidationError.__init__","ErrorHandler.__init__"],["ValidationStage.__init__","ValidationError.__init__"],["JSONFormatter.__init__","MockGit.__init__"],["ErrorHandler.handle","_convert_to_genesis_error"],["LinterStage.__init__","GenesisTimeoutError.__init__"],["ValidationError.__init__","GenesisError.__init__"],["CircuitBreakerError.__init__","FormatterStage.__init__"],["NetworkError.__init__","MockGit.__init__"],["ai_safety_validator","ExternalServiceError.__init__"],["MockFilesystem.__exit__","MockFilesystem.cleanup"],["getTraceId","getContext"],["InfrastructureError.__init__","ValidationError.__init__"],["AuthenticationError.__init__","__init__"],["CircuitBreaker.decorator","CircuitBreaker.sync_wrapper"],["ValidationStage.__init__","TypedConfig.__init__"],["NodeFormatterStage.__init__","RateLimitError.__init__"],["GenesisTimeoutError.__init__","ValidationStage.__init__"],["JSONFormatter.__init__","PythonLinterStage.__init__"],["CircuitBreaker.metrics","CircuitBreaker.metrics"],["ValidationError.__init__","GenesisConfigLoader.__init__"],["AuthorizationError.__init__","ConfigFormatterStage.__init__"],["JSONFormatter.__init__","InfrastructureError.__init__"],["ConfigLoader.load","ConfigLoader.load_file"],["NetworkError.__init__","PythonLinterStage.__init__"],["JSONFormatter.__init__","MockCommandRunner.__init__"],["NodeLinterStage.__init__","MockFilesystem.__init__"],["FormatterStage.__init__","ConfigFormatterStage.__init__"],["TestCircuitBreaker.test_thread_safety","worker_successful"],["ResourceError.__init__","ConvergentFixer.__init__"],["AuthorizationError.__init__","GenesisTimeoutError.__init__"],["NetworkError.__init__","MockCommandRunner.__init__"],["PythonFormatterStage.__init__","AuthenticationError.__init__"],["ai_safety_validator","PythonFormatterStage.__init__"],["TestCircuitBreaker.test_failed_call","failing_function"],["NodeLinterStage.__init__","AISafetyChecker.__init__"],["TestCircuitBreakerDecorator.test_decorator_async_function","async_test_function"],["FormatterStage.__init__","GenesisTimeoutError.__init__"],["AuthorizationError.__init__","Stage.__init__"],["Stage.run","Stage.get_commands"],["PythonLinterStage.__init__","ExternalServiceError.__init__"],["Stage.run","PythonLinterStage.get_commands"],["LinterStage.__init__","FormatterStage.__init__"],["RateLimitError.__init__","MockFilesystem.__init__"],["MockCommandRunner.get_call_count","MockCommandRunner.get_calls_matching"],["FormatterStage.__init__","Stage.__init__"],["CircuitBreaker.decorator","async_wrapper"],["NodeLinterStage.__init__","TimeoutError.__init__"],["ConfigFormatterStage.__init__","ConvergentFixer.__init__"],["AuthenticationError.__init__","ValidationStage.__init__"],["CircuitBreakerError.__init__","ConvergentFixer.__init__"],["RateLimitError.__init__","AISafetyChecker.__init__"],["NodeFormatterStage.__init__","NodeFormatterStage.__init__"],["GenesisError._create_default_context","create_default"],["JSONFormatter.__init__","ProjectDetector.__init__"],["NodeFormatterStage.__init__","ConfigLoader.__init__"],["RateLimitError.__init__","TimeoutError.__init__"],["NetworkError.__init__","ProjectDetector.__init__"],["PythonLinterStage.__init__","PythonFormatterStage.__init__"],["TestCircuitBreakerDecorator.test_factory_decorator","TestResilientIntegration.test_function"],["handle_error","get_error_handler"],["ValidationStage.__init__","MockFilesystem.__init__"],["CircuitBreaker.call_async","CircuitBreaker._can_execute"],["Stage.run","PythonFormatterStage.get_commands"],["ExternalServiceError.__init__","CircuitBreaker.__init__"],["GenesisError.__init__","NodeLinterStage.__init__"],["ExternalServiceError.__init__","LinterStage.__init__"],["RateLimitError.__init__","ErrorHandler.__init__"],["ValidationError.__init__","for.__init__"],["AuthorizationError.__init__","__init__"],["BasicFixesStage.__init__","LinterStage.__init__"],["JSONFormatter.__init__","ResourceError.__init__"],["AuthorizationError.__init__","FormatterStage.__init__"],["MockFilesystem._create_structure_recursive","MockFilesystem._create_structure_recursive"],["NodeLinterStage.__init__","MockGit.__init__"],["JSONFormatter.__init__","AuthorizationError.__init__"],["NetworkError.__init__","ResourceError.__init__"],["InfrastructureError.__init__","MockFilesystem.__init__"],["error_exit","show_usage"],["FormatterStage.__init__","FormatterStage.__init__"],["TestCircuitBreakerDecorator.test_decorator_async_function","TestCircuitBreakerDecorator.async_test_function"],["ValidationError.__init__","NodeFormatterStage.__init__"],["ai_safety_validator","AuthenticationError.__init__"],["TestCircuitBreaker.test_circuit_half_open_after_timeout","successful_function"],["CircuitBreaker.decorator","CircuitBreaker.call"],["TestResilientIntegration.test_resilient_call_decorator","TestResilientIntegration.test_function"],["ProjectDetector.detect","_detect_python_subtype"],["ResourceError.__init__","BasicFixesStage.__init__"],["getLoggerContext","getContext"]],"d":{"docs/README.md":["Genesis Documentation","Documentation Structure","Quick Links"],"docs/guides/getting-started.md":["Genesis HOW TO Guide","Quick Start (5 Minutes)","1. Install Genesis","Clone and install","Verify installation","2. Create Your First Project","Create a Python API project","Create a CLI tool","Create a TypeScript service","3. Start Development"],"genesis/README.md":["Genesis Core","Components","Usage","Install Genesis","Use CLI"],"genesis/core/autofix/README.md":["AutoFix System","Quick Start","Run all stages with convergent fixing","Run specific stage only","Stages","Stage 1: Formatters","Stage 2: Linters  ","Stage 3: Convergent Fixing","Configuration","Integration"],"genesis/core/errors/README.md":["Error Framework","Quick Start","Error Categories","Features"],"scripts/README.md":["Scripts Directory","Organization","Examples"],".solve/metrics/improvement_metrics_20250821_140225.md":["SOLVE Improvement Metrics Report","Executive Summary","Lesson Capture Metrics","By Source","By Category","By Impact Level","Template Evolution Metrics","By Template Type","Issue Reduction","Top Patterns"],"CLAUDE.md":["\u26a0\ufe0f CONTEXT MODE: BUILDING GENESIS \u26a0\ufe0f","Context Detection Rules","You're BUILDING Genesis if:","You're USING Genesis if:","Building vs Using Genesis","\ud83c\udfaf Core Building Principle: \"Build Generic, Use Everywhere\"","The Rule","Why This Matters","Examples of GOOD vs BAD","Apply This Rule To Everything"],"README.md":["Genesis","Features","Installation","Prerequisites","Install from Source","Clone and install","Usage","Show help","Bootstrap new project","Create AI-safe worktree"],"SECURITY.md":["Security Policy","\ud83d\udee1\ufe0f Security Framework","Supported Versions","\ud83d\udd12 Security Measures","Automated Security Scanning","Security Policies","\ud83d\udea8 Reporting Security Vulnerabilities","Responsible Disclosure","Response Timeline","Security Advisory Process"],"bootstrap/README.md":["Bootstrap - Generic Project Initialization","Features","Usage","Create Python API project","Create TypeScript service with custom path","Create CLI tool without Git initialization","Get help","Project Templates","Python API (`python-api`)","TypeScript Service (`typescript-service`)"],"shared-typescript/README.md":["@genesis/shared","Installation","Quick Start","Core Modules","Configuration (`config`)","Logging (`logger`)","Health Checks (`health`)","Retry & Circuit Breaker (`retry`)","Error Handling (`errors`)","Context Management (`context`)  "],"smart-commit/README.md":["Smart Commit System","Features","Usage","Run smart commit (interactive)","The script will guide you through:","1. Pre-commit checks (if configured)","2. Running tests (with continue option)","3. Code linting and auto-formatting","4. Secret scanning","5. Commit type selection"],"templates/README.md":["Genesis Project Templates","Available Templates","1. Python API (`python-api`)","2. CLI Tool (`cli-tool`)","3. TypeScript Service (`typescript-service`)","Template Structure","Template Variables","Using Templates","Create Python API project","Create CLI tool"],"templates/terraform-project/README.md":["Terraform Project Template","Features","Quick Start","What Gets Created","Configuration","Required","Optional","Available Commands","State Management","Extending the Template"],"terraform/README.md":["Terraform Modules","Available Modules","Usage","Basic Project Setup","With State Backend","Examples","Testing","Validate all modules","Run integration tests"],"terraform/examples/README.md":["Terraform Examples","Examples","basic-project/","advanced-project/","How to Use","Why These Examples?"],"testing/README.md":["Testing Infrastructure - Comprehensive pytest Framework","Features","Contents","`fixtures/` - Test Fixtures and Mocks","`utilities/` - Test Helper Functions","`tests/` - Infrastructure Tests","Root Configuration","Usage Examples","Basic Component Testing","AI Safety Validation"],"worktree-tools/README.md":["Worktree Tools - AI-Safe Development Isolation","Features","Usage","Create AI-safe sparse worktree focused on specific file","Focus on directory with custom file limit","Create with safety verification","Get help","AI Safety Workflow","After creation, your worktree will contain:","Integration with Genesis Workflow"]},"deps":{"bootstrap/tests/test_bootstrap.py":["os","subprocess","tempfile","shutil","pathlib","pytest"],"conftest.py":["os","tempfile","shutil","pathlib","typing","pytest","subprocess","unittest.mock"],"genesis/cli.py":["os","shutil","subprocess","sys","pathlib","typing","click","genesis.commands.bootstrap"],"genesis/commands/bootstrap.py":["os","shutil","subprocess","sys","pathlib","typing","click"],"genesis/core/autofix/convergence.py":["subprocess","dataclasses","genesis.core.logger"],"genesis/core/autofix/detectors.py":["subprocess","dataclasses","enum","pathlib","typing","genesis.core.logger"],"genesis/core/autofix/errors.py":["genesis.core.errors"],"genesis/core/autofix/fixer.py":["subprocess","dataclasses","pathlib","typing","genesis.core.logger"],"genesis/core/autofix/stages.py":["abc","dataclasses","enum","typing","genesis.core.logger"],"genesis/core/config.py":["os","pathlib","typing","yaml"],"genesis/core/context/manager.py":["os","uuid","contextlib","contextvars","dataclasses","datetime","typing"],"genesis/core/errors/handler.py":["json","traceback","uuid","dataclasses","datetime","enum","typing","os","os","os"],"genesis/core/health.py":["time","collections.abc","dataclasses","datetime","enum","typing"],"genesis/core/logger.py":["json","logging","sys","dataclasses","datetime","typing"],"genesis/core/retry.py":["asyncio","functools","inspect","random","threading","time","collections","collections.abc","dataclasses","enum","typing"],"genesis/testing/ai_safety.py":["pathlib","typing","subprocess"],"shared-typescript/src/config.ts":["fs","path","js-yaml","shared-typescript/src/errors.ts"],"shared-typescript/src/context.ts":["async_hooks","crypto"],"shared-typescript/src/health.ts":["shared-typescript/src/errors.ts"],"shared-typescript/src/logger.ts":["shared-typescript/src/context.ts"],"shared-typescript/src/retry.ts":["shared-typescript/src/errors.ts"],"smart-commit/tests/test_smart_commit.py":["os","subprocess","tempfile","pathlib","unittest.mock","pytest"],"testing/fixtures/mock_commands.py":["unittest.mock","typing","subprocess"],"testing/fixtures/mock_filesystem.py":["tempfile","shutil","pathlib","typing","os"],"testing/fixtures/mock_git.py":["unittest.mock","typing","subprocess"],"testing/tests/test_ai_safety.py":["pytest","pathlib","testing.fixtures","genesis.testing.ai_safety","testing.utilities"],"testing/tests/test_integration.py":["pytest","subprocess","tempfile","pathlib","unittest.mock","testing.fixtures","sys","genesis","click.testing","sys","genesis","click.testing","sys","genesis","click.testing","sys","sys","genesis","click.testing","testing.utilities","sys","genesis","click.testing","sys","genesis","click.testing","sys","genesis","click.testing"],"tests/test_autofix.py":["pytest","subprocess","pathlib","unittest.mock","genesis.core.autofix","genesis.core.autofix.stages","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.stages","genesis.core.autofix.detectors","genesis.core.autofix.stages","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.detectors","genesis.core.autofix.stages"],"tests/test_circuit_breaker.py":["asyncio","threading","time","unittest.mock","pytest","genesis.core.retry"],"tests/test_context_management.py":["pytest","threading","asyncio","datetime","unittest.mock","genesis.core.context","genesis.core.errors"],"tests/test_error_framework.py":["json","pytest","datetime","unittest.mock","genesis.core.errors"],"worktree-tools/tests/test_sparse_worktree.py":["os","subprocess","tempfile","shutil","pathlib","unittest.mock","pytest"]},"dir_purposes":{"docs":"Project documentation","scripts":"Build and utility scripts","bootstrap/src":"Source code root directory","bootstrap/tests":"Test files and test utilities","genesis/testing":"Test files and test utilities","shared-typescript/src":"Source code root directory","shared-typescript/tests":"Test files and test utilities","smart-commit/src":"Source code root directory","smart-commit/tests":"Test files and test utilities","templates/python-api":"API endpoints and route handlers","terraform/tests":"Test files and test utilities","testing":"Test files and test utilities","testing/fixtures":"Test fixtures and sample data","testing/tests":"Test files and test utilities","tests":"Test files and test utilities","worktree-tools/src":"Source code root directory","worktree-tools/tests":"Test files and test utilities"},"staleness":1755803278.160873}