# Prometheus Configuration for Universal Project Platform
# This configuration provides comprehensive metrics collection for all monitored projects

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: '{{ .Values.cluster }}'
    environment: '{{ .Values.environment }}'
    platform: 'universal-project-platform'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter for infrastructure metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['{{ .Values.nodeExporterTargets }}']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application metrics via OpenTelemetry
  - job_name: 'otel-collector'
    static_configs:
      - targets: ['{{ .Values.otelCollectorEndpoint }}']
    scrape_interval: 15s
    metrics_path: /metrics

  # Google Cloud Monitoring (via federation)
  - job_name: 'gcp-monitoring'
    honor_labels: true
    metrics_path: /federate
    params:
      'match[]':
        - '{job=~"gcp-.*"}'
        - '{__name__=~"gcp_.*"}'
    static_configs:
      - targets:
          - '{{ .Values.gcpMonitoringEndpoint }}'

  # Kubernetes metrics (when applicable)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Custom application endpoints
  - job_name: 'custom-apps'
    http_sd_configs:
      - url: '{{ .Values.serviceDiscoveryUrl }}/targets'
        refresh_interval: 30s
    relabel_configs:
      - source_labels: [__meta_http_sd_project]
        target_label: project
      - source_labels: [__meta_http_sd_environment]
        target_label: environment
      - source_labels: [__meta_http_sd_service]
        target_label: service

  # Database metrics
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['{{ .Values.postgresExporterTargets }}']
    scrape_interval: 30s

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['{{ .Values.redisExporterTargets }}']
    scrape_interval: 30s

  # Load balancer and reverse proxy metrics
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['{{ .Values.nginxExporterTargets }}']
    scrape_interval: 30s

  # Cloud provider specific metrics
  - job_name: 'gce-instances'
    gce_sd_configs:
      - project: '{{ .Values.gcpProject }}'
        zone: '{{ .Values.gcpZone }}'
        port: 9100
    relabel_configs:
      - source_labels: [__meta_gce_project]
        target_label: project
      - source_labels: [__meta_gce_zone]
        target_label: zone
      - source_labels: [__meta_gce_instance_name]
        target_label: instance

# Remote write configuration for long-term storage
remote_write:
  - url: '{{ .Values.remoteWriteUrl }}'
    basic_auth:
      username: '{{ .Values.remoteWriteUsername }}'
      password: '{{ .Values.remoteWritePassword }}'
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*|process_.*|prometheus_.*'
        action: drop
