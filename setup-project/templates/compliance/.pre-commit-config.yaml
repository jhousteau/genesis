# Universal Pre-commit Configuration
# Enforces code quality and standards before commits

repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=10000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: .*\.(lock|example|template)$

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ['-d', '{extends: default, rules: {line-length: {max: 120}}}']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Terraform formatting
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.83.5
    hooks:
      - id: terraform_fmt
      - id: terraform_validate
      - id: terraform_tflint

  # Docker linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Python specific
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3
        files: \.py$

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: ['--fix']

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        args: ['--ignore-missing-imports']
        additional_dependencies: [types-all]

  # JavaScript/TypeScript specific
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, css, scss, json, yaml, markdown]

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.54.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$
        types: [file]
        additional_dependencies:
          - eslint@8.54.0
          - eslint-config-prettier@9.0.0

  # Go specific
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.55.2
    hooks:
      - id: golangci-lint

  # Local custom hooks
  - repo: local
    hooks:
      - id: validate-compliance
        name: Validate Project Compliance
        entry: ./scripts/validate-compliance.sh
        language: system
        pass_filenames: false
        always_run: true

      - id: check-temp-files
        name: Check Temporary Files
        entry: bash -c 'test -z "$(find . -name "*.tmp" -o -name "*.temp" | grep -v "^./temp/")"'
        language: system
        pass_filenames: false

      - id: check-todos
        name: Check TODO Count
        entry: |
          bash -c 'TODO_COUNT=$(grep -r "TODO\|FIXME\|HACK" . --exclude-dir=.git | wc -l); test $TODO_COUNT -le 10 || (echo "Too many TODOs: $TODO_COUNT (max 10)" && exit 1)'
        language: system
        pass_filenames: false

      - id: validate-readme
        name: Validate README Structure
        entry: bash -c 'grep -q "## Overview" README.md && grep -q "## Quick Start" README.md'
        language: system
        files: README.md

      - id: no-debug-statements
        name: Check for Debug Statements
        entry: bash -c '! grep -r "console.log\|print\|fmt.Println\|debugger" --include="*.js" --include="*.py" --include="*.go" --exclude-dir=tests .'
        language: system
        pass_filenames: false

# Configuration
default_language_version:
  python: python3.11
  node: 20.10.0

fail_fast: false
minimum_pre_commit_version: '3.0.0'
