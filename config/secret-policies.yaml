# Genesis Secret Management Policies
# SHIELD Methodology Configuration for Comprehensive Secret Security

project_id: "${PROJECT_ID}"
environment: "${ENVIRONMENT:-development}"

# SHIELD S: SCAN Configuration
scan:
  enabled: true
  schedule: "0 6 * * *"  # Daily at 6 AM
  include_patterns:
    - "*"
  exclude_patterns:
    - "test-*"
    - "*-temp"
  discovery:
    auto_categorize: true
    tag_secrets: true
    validate_on_discovery: true

# SHIELD H: HARDEN Configuration
harden:
  validation:
    enabled: true
    min_length: 12
    require_complexity: true
    forbidden_patterns:
      - "password123"
      - "admin"
      - "secret"
      - "key123"
      - "changeme"
    entropy_threshold: 50.0

  access_control:
    enable_rbac: true
    require_service_identity: true
    max_concurrent_access: 100
    access_timeout_minutes: 5

  caching:
    enabled: true
    default_ttl_seconds: 300
    max_size: 1000
    cleanup_interval_seconds: 300

# SHIELD I: ISOLATE Configuration
isolate:
  environments:
    production:
      access_levels: ["SECRET_ACCESSOR"]
      allowed_services:
        - "serviceAccount:prod-service@${PROJECT_ID}.iam.gserviceaccount.com"
      require_justification: true
      max_access_duration_hours: 1

    staging:
      access_levels: ["SECRET_ACCESSOR", "SECRET_VERSION_ADDER"]
      allowed_services:
        - "serviceAccount:staging-service@${PROJECT_ID}.iam.gserviceaccount.com"
        - "group:staging-developers@example.com"
      require_justification: false
      max_access_duration_hours: 24

    development:
      access_levels: ["SECRET_VERSION_MANAGER"]
      allowed_services:
        - "group:developers@example.com"
        - "serviceAccount:dev-service@${PROJECT_ID}.iam.gserviceaccount.com"
      require_justification: false
      max_access_duration_hours: 168  # 1 week

  labels:
    required:
      - "environment"
      - "service"
      - "managed_by"

  network_isolation:
    enabled: true
    allowed_networks:
      - "10.0.0.0/8"      # Internal networks
      - "172.16.0.0/12"   # Private networks
      - "192.168.0.0/16"  # Local networks

# SHIELD E: ENCRYPT Configuration
encrypt:
  rotation:
    enabled: true
    default_interval_days: 90
    auto_rotate: true
    notification_days_before: 7
    max_rotation_attempts: 3
    rollback_on_failure: true

  policies:
    # Production secrets - strict rotation
    - pattern: "*-prod-*"
      interval_days: 60
      auto_rotate: true
      notification_days_before: 14
      emergency_contacts: ["security@example.com"]

    # API keys - frequent rotation
    - pattern: "*-api-key*"
      interval_days: 30
      auto_rotate: true
      validation_required: true

    # Database credentials - regular rotation
    - pattern: "*-db-*"
      interval_days: 45
      auto_rotate: true
      rollback_on_failure: true
      test_connection: true

    # Development secrets - relaxed rotation
    - pattern: "*-dev-*"
      interval_days: 180
      auto_rotate: false
      validation_required: false

# SHIELD L: LOG Configuration
log:
  audit_logging:
    enabled: true
    log_level: "INFO"
    include_metadata: true
    retention_days: 365

  destinations:
    - type: "cloud_logging"
      project_id: "${PROJECT_ID}"
      log_name: "secret-manager-audit"

    - type: "bigquery"
      dataset: "security_logs"
      table: "secret_access_logs"
      partition_field: "timestamp"

  compliance:
    gdpr:
      enabled: true
      anonymize_user_data: false  # Keep for security auditing
      retention_policy: "retain"

    sox:
      enabled: false
      detailed_logging: true

    pci_dss:
      enabled: false
      mask_sensitive_data: true

# SHIELD D: DEFEND Configuration
defend:
  monitoring:
    enabled: true
    threat_detection: true
    alert_on_suspicious_activity: true
    metrics_collection: true

  threat_detection:
    max_access_rate_per_minute: 100
    max_failed_attempts_per_hour: 10
    anomaly_detection_window_hours: 1

  alerting:
    channels:
      - type: "email"
        recipients: ["security@example.com"]
        severity_threshold: "WARNING"

      - type: "slack"
        webhook_url: "${SLACK_WEBHOOK_URL}"
        channel: "#security-alerts"
        severity_threshold: "ERROR"

      - type: "pagerduty"
        service_key: "${PAGERDUTY_SERVICE_KEY}"
        severity_threshold: "CRITICAL"

  incident_response:
    auto_rotate_on_breach: true
    quarantine_suspicious_secrets: true
    notify_security_team: true

  health_checks:
    enabled: true
    schedule: "0 */6 * * *"  # Every 6 hours
    validate_all_secrets: false  # Only validate a sample
    sample_percentage: 10

  auto_remediation:
    enabled: true
    max_auto_actions_per_hour: 10
    actions:
      - "rotate_compromised_secrets"
      - "revoke_suspicious_access"
      - "alert_security_team"

# Integration Configuration
integrations:
  claude_talk:
    enabled: true
    secret_prefix: "claude-talk-"
    api_keys:
      - "claude-talk-api-key"
      - "claude-talk-webhook-secret"

  agent_cage:
    enabled: true
    secret_prefix: "agent-cage-"
    vm_credentials:
      - "agent-cage-ssh-key"
      - "agent-cage-service-account-key"

  gcp_services:
    secret_manager:
      enabled: true
      project_id: "${PROJECT_ID}"

    iam:
      enabled: true
      enable_jit_access: true

    cloud_logging:
      enabled: true
      log_retention_days: 365

    monitoring:
      enabled: true
      notification_channels: []

# Multi-Environment Support
environments:
  development:
    inherit: "default"
    overrides:
      defend:
        alerting:
          channels:
            - type: "email"
              recipients: ["dev-team@example.com"]

  staging:
    inherit: "default"
    overrides:
      encrypt:
        rotation:
          default_interval_days: 60

  production:
    inherit: "default"
    overrides:
      harden:
        validation:
          min_length: 16
          entropy_threshold: 60.0
      encrypt:
        rotation:
          default_interval_days: 30
      defend:
        health_checks:
          schedule: "0 */2 * * *"  # Every 2 hours
