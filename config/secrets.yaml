# Genesis Secret Management Configuration
# SHIELD Methodology Configuration for Multi-Environment Secret Management

# Global secret management settings
secret_management:
  # Secret Manager service configuration
  service:
    provider: "gcp_secret_manager"
    project_id: "${PROJECT_ID}"
    region: "${REGION:-us-central1}"

  # Security settings
  security:
    encryption_at_rest: true
    encryption_in_transit: true
    require_authentication: true
    audit_all_operations: true

  # Access control settings
  access_control:
    enable_rbac: true
    require_service_identity: true
    max_concurrent_access: 100
    access_timeout_minutes: 5

  # Cache settings
  cache:
    enabled: true
    default_ttl_seconds: 300
    max_cache_size: 1000
    cleanup_interval_seconds: 300

  # Rotation settings
  rotation:
    enabled: true
    default_interval_days: 90
    auto_rotate: true
    notification_days_before: 7
    max_rotation_attempts: 3
    rollback_on_failure: true

  # Monitoring settings
  monitoring:
    enabled: true
    audit_logging: true
    threat_detection: true
    alert_on_suspicious_activity: true
    metrics_collection: true

# Environment-specific configurations
environments:
  development:
    secret_management:
      cache:
        default_ttl_seconds: 180  # Shorter TTL for dev
      rotation:
        default_interval_days: 30  # More frequent rotation in dev
        auto_rotate: false  # Manual rotation in dev
      monitoring:
        threat_detection: false  # Relaxed monitoring in dev

  staging:
    secret_management:
      cache:
        default_ttl_seconds: 240  # Medium TTL for staging
      rotation:
        default_interval_days: 60  # Medium rotation interval
        auto_rotate: true
      monitoring:
        threat_detection: true
        alert_on_suspicious_activity: true

  production:
    secret_management:
      cache:
        default_ttl_seconds: 600  # Longer TTL for production
      rotation:
        default_interval_days: 90  # Standard rotation interval
        auto_rotate: true
        notification_days_before: 14  # More warning time in prod
        max_rotation_attempts: 5  # More attempts in prod
      monitoring:
        threat_detection: true
        alert_on_suspicious_activity: true
        metrics_collection: true
      access_control:
        require_service_identity: true
        max_concurrent_access: 50  # More restrictive in prod

# Secret categorization and policies
secret_policies:
  # Database secrets
  - pattern: "*-db-*"
    access_level: "restricted"
    rotation_interval_days: 60
    allowed_services: ["backend-service", "data-service"]
    custom_validation: true

  # API keys
  - pattern: "*-api-key-*"
    access_level: "internal"
    rotation_interval_days: 30
    allowed_environments: ["staging", "production"]

  # OAuth secrets
  - pattern: "*-oauth-*"
    access_level: "confidential"
    rotation_interval_days: 45
    require_mfa: true

  # Service-to-service tokens
  - pattern: "*-service-token-*"
    access_level: "restricted"
    rotation_interval_days: 90
    allowed_services: ["*-service"]

  # External integration secrets
  - pattern: "*-external-*"
    access_level: "confidential"
    rotation_interval_days: 60
    notification_days_before: 14
    require_approval: true

# Service-specific configurations
services:
  claude-talk:
    secrets:
      - name: "claude-talk-api-key"
        type: "api_key"
        rotation_interval_days: 30
        cache_ttl_seconds: 300

      - name: "claude-talk-openai-key"
        type: "api_key"
        rotation_interval_days: 30
        access_level: "restricted"

      - name: "claude-talk-db-password"
        type: "password"
        rotation_interval_days: 60
        access_level: "confidential"

      - name: "claude-talk-session-secret"
        type: "token"
        rotation_interval_days: 14
        cache_ttl_seconds: 180

    access_control:
      allowed_services: ["claude-talk-api", "claude-talk-worker"]
      allowed_environments: ["development", "staging", "production"]

  agent-cage:
    secrets:
      - name: "agent-cage-vm-access-key"
        type: "ssh_key"
        rotation_interval_days: 90
        access_level: "top_secret"
        require_mfa: true

      - name: "agent-cage-container-registry-token"
        type: "token"
        rotation_interval_days: 45
        access_level: "restricted"

      - name: "agent-cage-monitoring-key"
        type: "api_key"
        rotation_interval_days: 60
        access_level: "internal"

      - name: "agent-cage-cloud-provider-key"
        type: "service_account_key"
        rotation_interval_days: 90
        access_level: "top_secret"

    access_control:
      allowed_services: ["agent-cage-controller", "agent-cage-runner"]
      allowed_environments: ["staging", "production"]
      require_service_identity: true

# Alerting and notification configuration
alerting:
  # Notification channels
  channels:
    slack:
      webhook_url: "${SLACK_WEBHOOK_URL}"
      enabled: true

    email:
      smtp_server: "${SMTP_SERVER}"
      recipients: ["${SECURITY_EMAIL}"]
      enabled: true

    pagerduty:
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
      enabled: false

  # Alert rules
  rules:
    - name: "excessive_access_attempts"
      condition: "access_rate > 100 per minute"
      level: "warning"
      channels: ["slack"]

    - name: "failed_access_threshold"
      condition: "failed_attempts > 10 per hour"
      level: "error"
      channels: ["slack", "email"]

    - name: "rotation_failure"
      condition: "rotation_status == failed"
      level: "critical"
      channels: ["slack", "email", "pagerduty"]

    - name: "unauthorized_access_attempt"
      condition: "access_denied AND risk_score > 0.7"
      level: "critical"
      channels: ["slack", "email"]

# Compliance and audit settings
compliance:
  # Audit log retention
  audit_log_retention_days: 365

  # Required fields for audit
  required_audit_fields:
    - timestamp
    - operation
    - secret_name
    - user_identity
    - source_ip
    - status

  # Export settings for compliance reports
  export:
    enabled: true
    format: "json"
    schedule: "daily"
    destination: "gs://${PROJECT_ID}-audit-logs"

  # Compliance frameworks
  frameworks:
    - name: "SOC2"
      enabled: true
      requirements:
        - encrypted_storage
        - access_logging
        - regular_rotation

    - name: "PCI-DSS"
      enabled: false
      requirements:
        - strong_encryption
        - access_controls
        - regular_audits

# Integration settings
integrations:
  # Terraform integration
  terraform:
    enabled: true
    secret_provider: "google"
    auto_generate_variables: true

  # Kubernetes integration
  kubernetes:
    enabled: true
    secret_type: "Opaque"
    namespace_isolation: true
    auto_inject_secrets: true

  # CI/CD integration
  cicd:
    github_actions:
      enabled: true
      oidc_provider: "projects/${PROJECT_NUMBER}/locations/global/workloadIdentityPools/${POOL_ID}/providers/${PROVIDER_ID}"

    gitlab_ci:
      enabled: false

    jenkins:
      enabled: false

# Performance and scaling settings
performance:
  # Connection pooling
  connection_pool:
    max_connections: 50
    idle_timeout_seconds: 300

  # Batch operations
  batch_operations:
    enabled: true
    max_batch_size: 20
    batch_timeout_seconds: 30

  # Retry settings
  retry:
    max_attempts: 3
    backoff_multiplier: 2.0
    max_backoff_seconds: 60
