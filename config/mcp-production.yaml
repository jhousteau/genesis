# MCP Production Configuration Template
# Comprehensive configuration for production deployment of Genesis MCP Protocol Support

# MCP Server Configuration
mcp:
  server:
    # Network configuration
    host: "0.0.0.0"  # Bind to all interfaces
    port: 8080

    # Protocol support
    enableAuth: true
    enableWebSocket: true
    enableHttp: true

    # Security configuration
    corsOrigins:
      - "https://claude-talk.anthropic.com"
      - "https://api.anthropic.com"
      - "https://*.genesis.local"  # Internal domain

    # Connection limits
    maxConnections: 10000
    maxRequestsPerConnection: 1000

    # Timeouts (in milliseconds)
    requestTimeout: 30000     # 30 seconds
    keepAliveTimeout: 5000    # 5 seconds
    websocketTimeout: 300000  # 5 minutes

    # Request size limits
    maxRequestSize: "10MB"
    maxPayloadSize: "50MB"

    # Connection pooling
    connectionPool:
      enabled: true
      minConnections: 10
      maxConnections: 100
      acquireTimeout: 10000  # 10 seconds
      idleTimeout: 60000     # 1 minute

  # Authentication Configuration
  auth:
    enabled: true
    strategies: ["jwt", "api-key"]

    # JWT Configuration
    jwt:
      secret: "${MCP_JWT_SECRET}"  # Set via environment variable
      algorithm: "HS256"
      expiresIn: "1h"
      issuer: "genesis-platform"
      audience: "claude-talk"
      clockTolerance: 30  # seconds

    # API Key Configuration
    apiKey:
      headerName: "X-API-Key"
      hashAlgorithm: "bcrypt"
      saltRounds: 12

    # Role-Based Access Control
    rbac:
      enabled: true
      defaultRole: "guest"
      roles:
        guest:
          permissions: ["health.check", "service.discover"]
        user:
          permissions: ["agent.launch", "agent.status", "agent.message", "service.register"]
        admin:
          permissions: ["*"]  # All permissions

  # Monitoring and Observability
  monitoring:
    enabled: true
    metricsPort: 8081

    # Health check configuration
    healthCheckInterval: 30  # seconds
    healthCheckTimeout: 10   # seconds

    # Metrics collection
    metricsInterval: 60      # seconds
    metricsRetention: 86400  # 24 hours in seconds

    # Distributed tracing
    tracing:
      enabled: true
      serviceName: "genesis-mcp-server"
      samplingRate: 0.1  # 10% sampling
      endpoint: "http://jaeger:14268/api/traces"

    # Structured logging
    logging:
      level: "info"
      format: "json"
      destination: "stdout"
      includeStackTrace: false

  # Service Registry Configuration
  services:
    registry:
      maxServices: 1000
      healthCheckInterval: 30  # seconds
      cleanupInterval: 300     # 5 minutes
      serviceTimeout: 60       # seconds

      # Service discovery
      discovery:
        enabled: true
        announceInterval: 30   # seconds
        ttl: 90               # seconds

    # Load Balancing
    loadBalancer:
      enabled: true
      strategy: "least-connections"  # round-robin, least-connections, weighted
      healthyThreshold: 2
      unhealthyThreshold: 3
      checkInterval: 10  # seconds

  # Security Configuration
  security:
    # Rate limiting
    rateLimiting:
      enabled: true
      requestsPerMinute: 1000
      burstLimit: 100
      whitelistIPs: []  # IPs exempt from rate limiting

    # Request validation
    requestValidation:
      enabled: true
      maxRequestSize: "10MB"
      validateHeaders: true
      validatePayload: true
      sanitizeInput: true

    # Security headers
    securityHeaders:
      enabled: true
      hsts: true
      noSniff: true
      frameOptions: "DENY"
      xssProtection: true

    # TLS Configuration (for HTTPS endpoints)
    tls:
      enabled: false  # Enable for production with proper certificates
      certFile: "/etc/ssl/certs/mcp-server.crt"
      keyFile: "/etc/ssl/private/mcp-server.key"
      minVersion: "1.2"

# Claude-Talk Integration Configuration
claude_talk:
  integration:
    enabled: true
    mock_mode: false

    # Session configuration
    session_timeout: 1800     # 30 minutes in seconds
    max_concurrent_agents: 100
    agent_startup_timeout: 30  # seconds

    # Message handling
    message_buffer_size: 1000
    message_timeout: 300      # 5 minutes
    streaming_enabled: true

    # Communication patterns
    communication:
      patterns: ["request-response", "streaming", "pub-sub"]
      compression: true
      heartbeat_interval: 30  # seconds

  # Resource Management
  resources:
    # Default resource allocations
    defaults:
      memory: "2GB"
      cpu: "1000m"      # 1 CPU core
      storage: "1GB"
      timeout: 1800     # 30 minutes

    # Maximum resource limits
    limits:
      memory: "8GB"
      cpu: "4000m"      # 4 CPU cores
      storage: "10GB"
      timeout: 7200     # 2 hours

    # Resource pools
    pools:
      small:
        memory: "1GB"
        cpu: "500m"
        storage: "512MB"
      medium:
        memory: "2GB"
        cpu: "1000m"
        storage: "1GB"
      large:
        memory: "4GB"
        cpu: "2000m"
        storage: "2GB"
      xlarge:
        memory: "8GB"
        cpu: "4000m"
        storage: "5GB"

  # Agent Configuration
  agents:
    # Supported agent types
    supported_types:
      - "claude-3.5-sonnet"
      - "claude-3-haiku"
      - "claude-instant"

    # Agent lifecycle management
    lifecycle:
      max_idle_time: 300     # 5 minutes
      cleanup_interval: 600  # 10 minutes
      graceful_shutdown_timeout: 30  # seconds

    # Agent priorities
    priorities:
      critical: 100
      high: 75
      normal: 50
      low: 25

# External Service Integration
external_services:
  # GCP Integration
  gcp:
    enabled: true
    project_id: "${GCP_PROJECT_ID}"

    # Secret Manager integration
    secret_manager:
      enabled: true
      key_ring: "mcp-secrets"
      location: "global"

    # Cloud Logging
    cloud_logging:
      enabled: true
      log_level: "info"

    # Cloud Monitoring
    cloud_monitoring:
      enabled: true
      namespace: "genesis/mcp"

  # Container Orchestration
  kubernetes:
    enabled: true
    namespace: "genesis-mcp"

    # Service mesh integration
    service_mesh:
      enabled: true
      type: "istio"  # istio, linkerd

    # Horizontal Pod Autoscaler
    hpa:
      enabled: true
      min_replicas: 3
      max_replicas: 20
      target_cpu: 70      # percent
      target_memory: 80   # percent

# Environment-Specific Overrides
environments:
  development:
    mcp:
      server:
        port: 8080
        maxConnections: 100
      auth:
        enabled: false  # Disable auth for development
      monitoring:
        metricsInterval: 10
    claude_talk:
      integration:
        mock_mode: true
        session_timeout: 300  # 5 minutes for faster iteration

  staging:
    mcp:
      server:
        port: 8080
        maxConnections: 1000
      auth:
        enabled: true
      monitoring:
        metricsInterval: 30
    claude_talk:
      integration:
        mock_mode: false
        session_timeout: 900  # 15 minutes
        max_concurrent_agents: 20

  production:
    # Use all default production values above
    mcp:
      security:
        tls:
          enabled: true  # Enable TLS in production

# Feature Flags
features:
  # Experimental features
  experimental:
    advanced_routing: false
    ml_based_load_balancing: false
    edge_caching: false

  # Beta features
  beta:
    websocket_compression: true
    request_deduplication: true
    circuit_breaker_ml: false

  # Stable features
  stable:
    health_checks: true
    service_discovery: true
    load_balancing: true
    rate_limiting: true
    monitoring: true
    authentication: true

# Alerting Configuration
alerting:
  enabled: true

  # Alert channels
  channels:
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#genesis-alerts"

    pagerduty:
      enabled: true
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"

    email:
      enabled: true
      smtp_server: "${SMTP_SERVER}"
      recipients: ["devops@genesis.local"]

  # Alert rules
  rules:
    - name: "high_error_rate"
      condition: "error_rate > 5% for 5 minutes"
      severity: "warning"
      channels: ["slack"]

    - name: "service_down"
      condition: "service_availability < 95% for 2 minutes"
      severity: "critical"
      channels: ["slack", "pagerduty"]

    - name: "high_latency"
      condition: "avg_response_time > 1000ms for 10 minutes"
      severity: "warning"
      channels: ["slack"]

    - name: "resource_exhaustion"
      condition: "memory_usage > 90% or cpu_usage > 90% for 5 minutes"
      severity: "critical"
      channels: ["slack", "pagerduty", "email"]

# Backup and Disaster Recovery
backup:
  enabled: true

  # State backup
  state_backup:
    enabled: true
    interval: 3600  # 1 hour
    retention: 168  # 7 days (168 hours)
    destination: "gs://genesis-backups/mcp-state"

  # Configuration backup
  config_backup:
    enabled: true
    interval: 86400  # 24 hours
    retention: 720   # 30 days (720 hours)
    destination: "gs://genesis-backups/mcp-config"

# Performance Tuning
performance:
  # Memory optimization
  memory:
    gc_target_percentage: 80
    max_heap_size: "4GB"

  # Connection optimization
  connections:
    keep_alive: true
    tcp_no_delay: true
    socket_reuse: true

  # Threading
  threading:
    worker_threads: 0  # 0 = auto-detect based on CPU cores
    io_threads: 0      # 0 = auto-detect

  # Caching
  caching:
    enabled: true
    max_cache_size: "1GB"
    ttl: 3600  # 1 hour

# Compliance and Governance
compliance:
  # Data governance
  data_governance:
    enabled: true
    data_residency: "us-central1"  # GCP region
    encryption_at_rest: true
    encryption_in_transit: true

  # Audit logging
  audit_logging:
    enabled: true
    include_request_body: false  # For privacy
    include_response_body: false # For privacy
    retention_days: 90
    destination: "gs://genesis-audit-logs/mcp"

  # Privacy controls
  privacy:
    pii_detection: true
    pii_masking: true
    data_anonymization: true
    consent_management: true

# Version and Metadata
metadata:
  version: "1.0.0"
  config_version: "2024-01-01"
  environment: "production"
  deployment_id: "${DEPLOYMENT_ID}"
  build_timestamp: "${BUILD_TIMESTAMP}"
  git_commit: "${GIT_COMMIT_SHA}"

# Validation Schema Version
schema_version: "1.0.0"
