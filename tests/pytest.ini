[tool:pytest]
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --cov-report=term-missing
    --cov-report=html:reports/coverage_html
    --cov-report=xml:reports/coverage.xml
    --cov-report=json:reports/coverage.json
    --html=reports/pytest_report.html
    --self-contained-html
    --junit-xml=reports/junit.xml

testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests  
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    error_handling: marks tests as error handling tests
    terraform: marks tests related to terraform
    monitoring: marks tests related to monitoring
    deployment: marks tests related to deployment
    registry: marks tests related to project registry
    cli: marks tests related to CLI commands
    cross_component: marks tests for cross-component communication

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py",
    "reports/",
    "temp/",
    "__pycache__/"
]

# Timeout configuration
timeout = 300
timeout_method = thread

# Coverage configuration
[coverage:run]
source = ../
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */node_modules/*
    */.git/*
    */build/*
    */dist/*
    */docs/*
    */examples/*
    */temp/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    pass
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = reports/coverage_html
title = Universal Project Platform Coverage Report

[coverage:xml]
output = reports/coverage.xml

[coverage:json]
output = reports/coverage.json
pretty_print = true